// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sawtooth_sdk/protobuf/events_pb2/events.proto

/*
Package events_pb2 is a generated protocol buffer package.

It is generated from these files:
	sawtooth_sdk/protobuf/events_pb2/events.proto

It has these top-level messages:
	Event
	EventList
	EventFilter
	EventSubscription
	ClientEventsSubscribeRequest
	ClientEventsSubscribeResponse
	ClientEventsUnsubscribeRequest
	ClientEventsUnsubscribeResponse
	ClientEventsGetRequest
	ClientEventsGetResponse
*/
package events_pb2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EventFilter_FilterType int32

const (
	EventFilter_SIMPLE_ANY EventFilter_FilterType = 0
	EventFilter_SIMPLE_ALL EventFilter_FilterType = 1
	EventFilter_REGEX_ANY  EventFilter_FilterType = 2
	EventFilter_REGEX_ALL  EventFilter_FilterType = 3
)

var EventFilter_FilterType_name = map[int32]string{
	0: "SIMPLE_ANY",
	1: "SIMPLE_ALL",
	2: "REGEX_ANY",
	3: "REGEX_ALL",
}
var EventFilter_FilterType_value = map[string]int32{
	"SIMPLE_ANY": 0,
	"SIMPLE_ALL": 1,
	"REGEX_ANY":  2,
	"REGEX_ALL":  3,
}

func (x EventFilter_FilterType) String() string {
	return proto.EnumName(EventFilter_FilterType_name, int32(x))
}
func (EventFilter_FilterType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type ClientEventsSubscribeResponse_Status int32

const (
	ClientEventsSubscribeResponse_OK             ClientEventsSubscribeResponse_Status = 0
	ClientEventsSubscribeResponse_INVALID_FILTER ClientEventsSubscribeResponse_Status = 1
	ClientEventsSubscribeResponse_UNKNOWN_BLOCK  ClientEventsSubscribeResponse_Status = 2
)

var ClientEventsSubscribeResponse_Status_name = map[int32]string{
	0: "OK",
	1: "INVALID_FILTER",
	2: "UNKNOWN_BLOCK",
}
var ClientEventsSubscribeResponse_Status_value = map[string]int32{
	"OK":             0,
	"INVALID_FILTER": 1,
	"UNKNOWN_BLOCK":  2,
}

func (x ClientEventsSubscribeResponse_Status) String() string {
	return proto.EnumName(ClientEventsSubscribeResponse_Status_name, int32(x))
}
func (ClientEventsSubscribeResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5, 0}
}

type ClientEventsUnsubscribeResponse_Status int32

const (
	ClientEventsUnsubscribeResponse_OK             ClientEventsUnsubscribeResponse_Status = 0
	ClientEventsUnsubscribeResponse_INTERNAL_ERROR ClientEventsUnsubscribeResponse_Status = 1
)

var ClientEventsUnsubscribeResponse_Status_name = map[int32]string{
	0: "OK",
	1: "INTERNAL_ERROR",
}
var ClientEventsUnsubscribeResponse_Status_value = map[string]int32{
	"OK":             0,
	"INTERNAL_ERROR": 1,
}

func (x ClientEventsUnsubscribeResponse_Status) String() string {
	return proto.EnumName(ClientEventsUnsubscribeResponse_Status_name, int32(x))
}
func (ClientEventsUnsubscribeResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{7, 0}
}

type ClientEventsGetResponse_Status int32

const (
	ClientEventsGetResponse_OK             ClientEventsGetResponse_Status = 0
	ClientEventsGetResponse_INTERNAL_ERROR ClientEventsGetResponse_Status = 1
	ClientEventsGetResponse_INVALID_FILTER ClientEventsGetResponse_Status = 2
	ClientEventsGetResponse_UNKNOWN_BLOCK  ClientEventsGetResponse_Status = 3
)

var ClientEventsGetResponse_Status_name = map[int32]string{
	0: "OK",
	1: "INTERNAL_ERROR",
	2: "INVALID_FILTER",
	3: "UNKNOWN_BLOCK",
}
var ClientEventsGetResponse_Status_value = map[string]int32{
	"OK":             0,
	"INTERNAL_ERROR": 1,
	"INVALID_FILTER": 2,
	"UNKNOWN_BLOCK":  3,
}

func (x ClientEventsGetResponse_Status) String() string {
	return proto.EnumName(ClientEventsGetResponse_Status_name, int32(x))
}
func (ClientEventsGetResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{9, 0}
}

type Event struct {
	// Used to subscribe to events and servers as a hint for how to deserialize
	// event_data and what pairs to expect in attributes.
	EventType  string             `protobuf:"bytes,1,opt,name=event_type,json=eventType" json:"event_type,omitempty"`
	Attributes []*Event_Attribute `protobuf:"bytes,2,rep,name=attributes" json:"attributes,omitempty"`
	// Opaque data defined by the event_type.
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Event) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

func (m *Event) GetAttributes() []*Event_Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Event) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Transparent data defined by the event_type.
type Event_Attribute struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Event_Attribute) Reset()                    { *m = Event_Attribute{} }
func (m *Event_Attribute) String() string            { return proto.CompactTextString(m) }
func (*Event_Attribute) ProtoMessage()               {}
func (*Event_Attribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *Event_Attribute) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Event_Attribute) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type EventList struct {
	Events []*Event `protobuf:"bytes,1,rep,name=events" json:"events,omitempty"`
}

func (m *EventList) Reset()                    { *m = EventList{} }
func (m *EventList) String() string            { return proto.CompactTextString(m) }
func (*EventList) ProtoMessage()               {}
func (*EventList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *EventList) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type EventFilter struct {
	// EventFilter is used when subscribing to events to limit the events
	// received within a given event type. See
	// validator/server/events/subscription.py for further explanation.
	Key         string                 `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	MatchString string                 `protobuf:"bytes,2,opt,name=match_string,json=matchString" json:"match_string,omitempty"`
	FilterType  EventFilter_FilterType `protobuf:"varint,3,opt,name=filter_type,json=filterType,enum=EventFilter_FilterType" json:"filter_type,omitempty"`
}

func (m *EventFilter) Reset()                    { *m = EventFilter{} }
func (m *EventFilter) String() string            { return proto.CompactTextString(m) }
func (*EventFilter) ProtoMessage()               {}
func (*EventFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *EventFilter) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *EventFilter) GetMatchString() string {
	if m != nil {
		return m.MatchString
	}
	return ""
}

func (m *EventFilter) GetFilterType() EventFilter_FilterType {
	if m != nil {
		return m.FilterType
	}
	return EventFilter_SIMPLE_ANY
}

type EventSubscription struct {
	// EventSubscription is used when subscribing to events to specify the type
	// of events being subscribed to, along with any additional filters. See
	// validator/server/events/subscription.py for further explanation.
	EventType string         `protobuf:"bytes,1,opt,name=event_type,json=eventType" json:"event_type,omitempty"`
	Filters   []*EventFilter `protobuf:"bytes,2,rep,name=filters" json:"filters,omitempty"`
}

func (m *EventSubscription) Reset()                    { *m = EventSubscription{} }
func (m *EventSubscription) String() string            { return proto.CompactTextString(m) }
func (*EventSubscription) ProtoMessage()               {}
func (*EventSubscription) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *EventSubscription) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

func (m *EventSubscription) GetFilters() []*EventFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

type ClientEventsSubscribeRequest struct {
	Subscriptions []*EventSubscription `protobuf:"bytes,1,rep,name=subscriptions" json:"subscriptions,omitempty"`
	// The block id (or ids, if trying to walk back a fork) the subscriber last
	// received events on. It can be set to empty if it has not yet received the
	// genesis block.
	LastKnownBlockIds []string `protobuf:"bytes,2,rep,name=last_known_block_ids,json=lastKnownBlockIds" json:"last_known_block_ids,omitempty"`
}

func (m *ClientEventsSubscribeRequest) Reset()                    { *m = ClientEventsSubscribeRequest{} }
func (m *ClientEventsSubscribeRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientEventsSubscribeRequest) ProtoMessage()               {}
func (*ClientEventsSubscribeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ClientEventsSubscribeRequest) GetSubscriptions() []*EventSubscription {
	if m != nil {
		return m.Subscriptions
	}
	return nil
}

func (m *ClientEventsSubscribeRequest) GetLastKnownBlockIds() []string {
	if m != nil {
		return m.LastKnownBlockIds
	}
	return nil
}

type ClientEventsSubscribeResponse struct {
	Status ClientEventsSubscribeResponse_Status `protobuf:"varint,1,opt,name=status,enum=ClientEventsSubscribeResponse_Status" json:"status,omitempty"`
	// Additional information about the response status
	ResponseMessage string `protobuf:"bytes,2,opt,name=response_message,json=responseMessage" json:"response_message,omitempty"`
}

func (m *ClientEventsSubscribeResponse) Reset()                    { *m = ClientEventsSubscribeResponse{} }
func (m *ClientEventsSubscribeResponse) String() string            { return proto.CompactTextString(m) }
func (*ClientEventsSubscribeResponse) ProtoMessage()               {}
func (*ClientEventsSubscribeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ClientEventsSubscribeResponse) GetStatus() ClientEventsSubscribeResponse_Status {
	if m != nil {
		return m.Status
	}
	return ClientEventsSubscribeResponse_OK
}

func (m *ClientEventsSubscribeResponse) GetResponseMessage() string {
	if m != nil {
		return m.ResponseMessage
	}
	return ""
}

type ClientEventsUnsubscribeRequest struct {
}

func (m *ClientEventsUnsubscribeRequest) Reset()                    { *m = ClientEventsUnsubscribeRequest{} }
func (m *ClientEventsUnsubscribeRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientEventsUnsubscribeRequest) ProtoMessage()               {}
func (*ClientEventsUnsubscribeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type ClientEventsUnsubscribeResponse struct {
	Status ClientEventsUnsubscribeResponse_Status `protobuf:"varint,1,opt,name=status,enum=ClientEventsUnsubscribeResponse_Status" json:"status,omitempty"`
}

func (m *ClientEventsUnsubscribeResponse) Reset()                    { *m = ClientEventsUnsubscribeResponse{} }
func (m *ClientEventsUnsubscribeResponse) String() string            { return proto.CompactTextString(m) }
func (*ClientEventsUnsubscribeResponse) ProtoMessage()               {}
func (*ClientEventsUnsubscribeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ClientEventsUnsubscribeResponse) GetStatus() ClientEventsUnsubscribeResponse_Status {
	if m != nil {
		return m.Status
	}
	return ClientEventsUnsubscribeResponse_OK
}

type ClientEventsGetRequest struct {
	Subscriptions []*EventSubscription `protobuf:"bytes,1,rep,name=subscriptions" json:"subscriptions,omitempty"`
	BlockIds      []string             `protobuf:"bytes,2,rep,name=block_ids,json=blockIds" json:"block_ids,omitempty"`
}

func (m *ClientEventsGetRequest) Reset()                    { *m = ClientEventsGetRequest{} }
func (m *ClientEventsGetRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientEventsGetRequest) ProtoMessage()               {}
func (*ClientEventsGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ClientEventsGetRequest) GetSubscriptions() []*EventSubscription {
	if m != nil {
		return m.Subscriptions
	}
	return nil
}

func (m *ClientEventsGetRequest) GetBlockIds() []string {
	if m != nil {
		return m.BlockIds
	}
	return nil
}

type ClientEventsGetResponse struct {
	Status ClientEventsGetResponse_Status `protobuf:"varint,1,opt,name=status,enum=ClientEventsGetResponse_Status" json:"status,omitempty"`
	Events []*Event                       `protobuf:"bytes,2,rep,name=events" json:"events,omitempty"`
}

func (m *ClientEventsGetResponse) Reset()                    { *m = ClientEventsGetResponse{} }
func (m *ClientEventsGetResponse) String() string            { return proto.CompactTextString(m) }
func (*ClientEventsGetResponse) ProtoMessage()               {}
func (*ClientEventsGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ClientEventsGetResponse) GetStatus() ClientEventsGetResponse_Status {
	if m != nil {
		return m.Status
	}
	return ClientEventsGetResponse_OK
}

func (m *ClientEventsGetResponse) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func init() {
	proto.RegisterType((*Event)(nil), "Event")
	proto.RegisterType((*Event_Attribute)(nil), "Event.Attribute")
	proto.RegisterType((*EventList)(nil), "EventList")
	proto.RegisterType((*EventFilter)(nil), "EventFilter")
	proto.RegisterType((*EventSubscription)(nil), "EventSubscription")
	proto.RegisterType((*ClientEventsSubscribeRequest)(nil), "ClientEventsSubscribeRequest")
	proto.RegisterType((*ClientEventsSubscribeResponse)(nil), "ClientEventsSubscribeResponse")
	proto.RegisterType((*ClientEventsUnsubscribeRequest)(nil), "ClientEventsUnsubscribeRequest")
	proto.RegisterType((*ClientEventsUnsubscribeResponse)(nil), "ClientEventsUnsubscribeResponse")
	proto.RegisterType((*ClientEventsGetRequest)(nil), "ClientEventsGetRequest")
	proto.RegisterType((*ClientEventsGetResponse)(nil), "ClientEventsGetResponse")
	proto.RegisterEnum("EventFilter_FilterType", EventFilter_FilterType_name, EventFilter_FilterType_value)
	proto.RegisterEnum("ClientEventsSubscribeResponse_Status", ClientEventsSubscribeResponse_Status_name, ClientEventsSubscribeResponse_Status_value)
	proto.RegisterEnum("ClientEventsUnsubscribeResponse_Status", ClientEventsUnsubscribeResponse_Status_name, ClientEventsUnsubscribeResponse_Status_value)
	proto.RegisterEnum("ClientEventsGetResponse_Status", ClientEventsGetResponse_Status_name, ClientEventsGetResponse_Status_value)
}

func init() { proto.RegisterFile("sawtooth_sdk/protobuf/events_pb2/events.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 627 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x54, 0x5d, 0x53, 0xd3, 0x4c,
	0x14, 0x7e, 0xd3, 0xbe, 0x54, 0x73, 0x0a, 0x35, 0xec, 0xa0, 0x30, 0x2a, 0x1f, 0xee, 0x88, 0xe2,
	0x38, 0x2e, 0x4e, 0xb9, 0x80, 0x1b, 0xc7, 0x29, 0x18, 0x98, 0xda, 0x90, 0x32, 0x5b, 0xf0, 0x83,
	0x9b, 0x4c, 0x42, 0x17, 0xcc, 0xb4, 0x24, 0xb5, 0xbb, 0x81, 0xe1, 0x1f, 0xe8, 0xcf, 0xf0, 0x97,
	0x38, 0xe3, 0x95, 0x3f, 0xcb, 0xcd, 0x26, 0x81, 0x18, 0x5a, 0x71, 0xc6, 0xab, 0x6e, 0x9e, 0xe7,
	0x7c, 0x3c, 0xe7, 0x3c, 0x9d, 0x03, 0x2f, 0xb8, 0x7b, 0x2e, 0xc2, 0x50, 0x7c, 0x72, 0x78, 0xb7,
	0xb7, 0x3a, 0x18, 0x86, 0x22, 0xf4, 0xa2, 0xe3, 0x55, 0x76, 0xc6, 0x02, 0xc1, 0x9d, 0x81, 0x57,
	0x4f, 0x9f, 0x44, 0x51, 0xf8, 0x9b, 0x06, 0x13, 0x66, 0x0c, 0xa0, 0x79, 0x00, 0xc5, 0x38, 0xe2,
	0x62, 0xc0, 0xe6, 0xb4, 0x25, 0x6d, 0x45, 0xa7, 0xba, 0x42, 0xf6, 0x25, 0x80, 0x5e, 0x02, 0xb8,
	0x42, 0x0c, 0x7d, 0x2f, 0x12, 0x8c, 0xcf, 0x95, 0x96, 0xca, 0x2b, 0xd5, 0xba, 0x41, 0x54, 0x2a,
	0x69, 0x64, 0x04, 0xcd, 0xc5, 0x20, 0x04, 0xff, 0x77, 0x5d, 0xe1, 0xce, 0x95, 0x65, 0xa9, 0x49,
	0xaa, 0xde, 0xf7, 0xd7, 0x40, 0xbf, 0x0c, 0x46, 0x06, 0x94, 0x7b, 0xec, 0x22, 0x6d, 0x15, 0x3f,
	0xd1, 0x0c, 0x4c, 0x9c, 0xb9, 0xfd, 0x88, 0xc9, 0xfa, 0x31, 0x96, 0x7c, 0xe0, 0xe7, 0xa0, 0xab,
	0x3e, 0x96, 0xcf, 0x05, 0x5a, 0x80, 0x4a, 0x32, 0x80, 0xcc, 0x8b, 0x35, 0x54, 0x12, 0x0d, 0x34,
	0x45, 0xf1, 0x4f, 0x0d, 0xaa, 0x0a, 0xd9, 0xf6, 0xfb, 0x82, 0x0d, 0x47, 0x34, 0x79, 0x04, 0x93,
	0xa7, 0xae, 0x38, 0x92, 0x0b, 0x92, 0x42, 0x82, 0x93, 0xb4, 0x57, 0x55, 0x61, 0x1d, 0x05, 0xa1,
	0x0d, 0xa8, 0x1e, 0xab, 0xf4, 0x64, 0x19, 0xf1, 0x04, 0xb5, 0xfa, 0x2c, 0xc9, 0xd5, 0x25, 0xc9,
	0x4f, 0xbc, 0x1a, 0x0a, 0xc7, 0x97, 0x6f, 0xfc, 0x16, 0xe0, 0x8a, 0x41, 0x35, 0x80, 0x4e, 0x73,
	0x77, 0xcf, 0x32, 0x9d, 0x86, 0xfd, 0xd1, 0xf8, 0x2f, 0xff, 0x6d, 0x59, 0x86, 0x86, 0xa6, 0x40,
	0xa7, 0xe6, 0x8e, 0xf9, 0x41, 0xd1, 0xa5, 0xdc, 0xa7, 0x64, 0xcb, 0xf8, 0x10, 0xa6, 0x55, 0xc7,
	0x4e, 0xe4, 0xf1, 0xa3, 0xa1, 0x3f, 0x10, 0x7e, 0x18, 0xdc, 0x64, 0xd3, 0x13, 0xb8, 0x95, 0xa8,
	0xc9, 0x3c, 0x9a, 0xcc, 0xab, 0xa6, 0x19, 0x89, 0xbf, 0x6a, 0xf0, 0x70, 0xab, 0xef, 0x4b, 0x46,
	0xd1, 0x3c, 0xed, 0xe1, 0x31, 0xca, 0x3e, 0x47, 0x4c, 0xee, 0x79, 0x03, 0xa6, 0x78, 0xae, 0x6f,
	0xb6, 0x6e, 0x44, 0xae, 0x49, 0xa2, 0xbf, 0x07, 0xa2, 0x55, 0x98, 0xe9, 0xbb, 0x5c, 0x38, 0xbd,
	0x20, 0x3c, 0x0f, 0x1c, 0xaf, 0x1f, 0x1e, 0xf5, 0x1c, 0xbf, 0x9b, 0xe8, 0xd1, 0xe9, 0x74, 0xcc,
	0xb5, 0x62, 0x6a, 0x33, 0x66, 0x9a, 0x5d, 0x8e, 0x7f, 0x68, 0x30, 0x3f, 0x46, 0x0b, 0x1f, 0xc8,
	0x8a, 0x0c, 0xbd, 0x82, 0x0a, 0x17, 0xae, 0x88, 0xb8, 0x1a, 0xb8, 0x56, 0x5f, 0x26, 0x7f, 0x8c,
	0x27, 0x1d, 0x15, 0x4c, 0xd3, 0x24, 0xf4, 0x0c, 0x8c, 0x61, 0x4a, 0x39, 0xa7, 0x8c, 0x73, 0xf7,
	0x24, 0xfb, 0x87, 0xdd, 0xc9, 0xf0, 0xdd, 0x04, 0xc6, 0xeb, 0x50, 0x49, 0x92, 0x51, 0x05, 0x4a,
	0xed, 0x96, 0xf4, 0x0c, 0x41, 0xad, 0x69, 0xbf, 0x6b, 0x58, 0xcd, 0x37, 0xce, 0x76, 0xd3, 0xda,
	0x37, 0xa9, 0xf4, 0x6d, 0x1a, 0xa6, 0x0e, 0xec, 0x96, 0xdd, 0x7e, 0x6f, 0x3b, 0x9b, 0x56, 0x7b,
	0xab, 0x65, 0x94, 0xf0, 0x12, 0x2c, 0xe4, 0x35, 0x1d, 0x04, 0xbc, 0xb0, 0x51, 0xfc, 0x45, 0x83,
	0xc5, 0xb1, 0x21, 0xe9, 0xa0, 0xaf, 0x0b, 0x83, 0x3e, 0x25, 0x37, 0x64, 0x14, 0x46, 0xc5, 0x8f,
	0x47, 0xeb, 0x97, 0xb2, 0xed, 0x86, 0xe5, 0x98, 0x94, 0xb6, 0xa5, 0x7e, 0x1c, 0xc2, 0xbd, 0x7c,
	0xdd, 0x1d, 0x26, 0xfe, 0xdd, 0xf6, 0x07, 0xa0, 0x17, 0xbd, 0xbe, 0xed, 0x65, 0x16, 0x7f, 0xd7,
	0x60, 0xf6, 0x5a, 0xc7, 0x74, 0xe6, 0xf5, 0xc2, 0xcc, 0x8b, 0x64, 0x4c, 0x64, 0xd1, 0xd6, 0xab,
	0x53, 0x50, 0x1a, 0x79, 0x0a, 0x5a, 0x7f, 0xb3, 0x8b, 0x11, 0xfe, 0x96, 0xae, 0xfb, 0x5b, 0xde,
	0x5c, 0x86, 0xbb, 0xd9, 0x65, 0x25, 0xf2, 0xb2, 0x92, 0xec, 0xb2, 0xee, 0x69, 0x87, 0x70, 0x75,
	0x5c, 0xbd, 0x8a, 0xc2, 0xd7, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff, 0x5f, 0x88, 0xe1, 0xcc, 0x87,
	0x05, 0x00, 0x00,
}
