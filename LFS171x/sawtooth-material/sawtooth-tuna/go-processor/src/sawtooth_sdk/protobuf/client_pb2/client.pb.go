// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sawtooth_sdk/protobuf/client_pb2/client.proto

/*
Package client_pb2 is a generated protocol buffer package.

It is generated from these files:
	sawtooth_sdk/protobuf/client_pb2/client.proto

It has these top-level messages:
	Leaf
	BatchStatus
	PagingControls
	PagingResponse
	SortControls
	ClientBatchSubmitRequest
	ClientBatchSubmitResponse
	ClientBatchStatusRequest
	ClientBatchStatusResponse
	ClientStateCurrentRequest
	ClientStateCurrentResponse
	ClientStateListRequest
	ClientStateListResponse
	ClientStateGetRequest
	ClientStateGetResponse
	ClientBlockListRequest
	ClientBlockListResponse
	ClientBlockGetRequest
	ClientBlockGetResponse
	ClientBatchListRequest
	ClientBatchListResponse
	ClientBatchGetRequest
	ClientBatchGetResponse
	ClientTransactionListRequest
	ClientTransactionListResponse
	ClientTransactionGetRequest
	ClientTransactionGetResponse
*/
package client_pb2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import block "sawtooth_sdk/protobuf/block_pb2"
import batch "sawtooth_sdk/protobuf/batch_pb2"
import transaction "sawtooth_sdk/protobuf/transaction_pb2"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BatchStatus_Status int32

const (
	BatchStatus_COMMITTED BatchStatus_Status = 0
	BatchStatus_INVALID   BatchStatus_Status = 1
	BatchStatus_PENDING   BatchStatus_Status = 2
	BatchStatus_UNKNOWN   BatchStatus_Status = 3
)

var BatchStatus_Status_name = map[int32]string{
	0: "COMMITTED",
	1: "INVALID",
	2: "PENDING",
	3: "UNKNOWN",
}
var BatchStatus_Status_value = map[string]int32{
	"COMMITTED": 0,
	"INVALID":   1,
	"PENDING":   2,
	"UNKNOWN":   3,
}

func (x BatchStatus_Status) String() string {
	return proto.EnumName(BatchStatus_Status_name, int32(x))
}
func (BatchStatus_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type ClientBatchSubmitResponse_Status int32

const (
	ClientBatchSubmitResponse_OK             ClientBatchSubmitResponse_Status = 0
	ClientBatchSubmitResponse_INTERNAL_ERROR ClientBatchSubmitResponse_Status = 1
	ClientBatchSubmitResponse_INVALID_BATCH  ClientBatchSubmitResponse_Status = 2
)

var ClientBatchSubmitResponse_Status_name = map[int32]string{
	0: "OK",
	1: "INTERNAL_ERROR",
	2: "INVALID_BATCH",
}
var ClientBatchSubmitResponse_Status_value = map[string]int32{
	"OK":             0,
	"INTERNAL_ERROR": 1,
	"INVALID_BATCH":  2,
}

func (x ClientBatchSubmitResponse_Status) String() string {
	return proto.EnumName(ClientBatchSubmitResponse_Status_name, int32(x))
}
func (ClientBatchSubmitResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{6, 0}
}

type ClientBatchStatusResponse_Status int32

const (
	ClientBatchStatusResponse_OK             ClientBatchStatusResponse_Status = 0
	ClientBatchStatusResponse_INTERNAL_ERROR ClientBatchStatusResponse_Status = 1
	ClientBatchStatusResponse_NO_RESOURCE    ClientBatchStatusResponse_Status = 4
)

var ClientBatchStatusResponse_Status_name = map[int32]string{
	0: "OK",
	1: "INTERNAL_ERROR",
	4: "NO_RESOURCE",
}
var ClientBatchStatusResponse_Status_value = map[string]int32{
	"OK":             0,
	"INTERNAL_ERROR": 1,
	"NO_RESOURCE":    4,
}

func (x ClientBatchStatusResponse_Status) String() string {
	return proto.EnumName(ClientBatchStatusResponse_Status_name, int32(x))
}
func (ClientBatchStatusResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{8, 0}
}

type ClientStateCurrentResponse_Status int32

const (
	ClientStateCurrentResponse_OK             ClientStateCurrentResponse_Status = 0
	ClientStateCurrentResponse_INTERNAL_ERROR ClientStateCurrentResponse_Status = 1
	ClientStateCurrentResponse_NOT_READY      ClientStateCurrentResponse_Status = 2
)

var ClientStateCurrentResponse_Status_name = map[int32]string{
	0: "OK",
	1: "INTERNAL_ERROR",
	2: "NOT_READY",
}
var ClientStateCurrentResponse_Status_value = map[string]int32{
	"OK":             0,
	"INTERNAL_ERROR": 1,
	"NOT_READY":      2,
}

func (x ClientStateCurrentResponse_Status) String() string {
	return proto.EnumName(ClientStateCurrentResponse_Status_name, int32(x))
}
func (ClientStateCurrentResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{10, 0}
}

type ClientStateListResponse_Status int32

const (
	ClientStateListResponse_OK             ClientStateListResponse_Status = 0
	ClientStateListResponse_INTERNAL_ERROR ClientStateListResponse_Status = 1
	ClientStateListResponse_NOT_READY      ClientStateListResponse_Status = 2
	ClientStateListResponse_NO_ROOT        ClientStateListResponse_Status = 3
	ClientStateListResponse_NO_RESOURCE    ClientStateListResponse_Status = 4
	ClientStateListResponse_INVALID_PAGING ClientStateListResponse_Status = 5
	ClientStateListResponse_INVALID_SORT   ClientStateListResponse_Status = 6
)

var ClientStateListResponse_Status_name = map[int32]string{
	0: "OK",
	1: "INTERNAL_ERROR",
	2: "NOT_READY",
	3: "NO_ROOT",
	4: "NO_RESOURCE",
	5: "INVALID_PAGING",
	6: "INVALID_SORT",
}
var ClientStateListResponse_Status_value = map[string]int32{
	"OK":             0,
	"INTERNAL_ERROR": 1,
	"NOT_READY":      2,
	"NO_ROOT":        3,
	"NO_RESOURCE":    4,
	"INVALID_PAGING": 5,
	"INVALID_SORT":   6,
}

func (x ClientStateListResponse_Status) String() string {
	return proto.EnumName(ClientStateListResponse_Status_name, int32(x))
}
func (ClientStateListResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{12, 0}
}

type ClientStateGetResponse_Status int32

const (
	ClientStateGetResponse_OK              ClientStateGetResponse_Status = 0
	ClientStateGetResponse_INTERNAL_ERROR  ClientStateGetResponse_Status = 1
	ClientStateGetResponse_NOT_READY       ClientStateGetResponse_Status = 2
	ClientStateGetResponse_NO_ROOT         ClientStateGetResponse_Status = 3
	ClientStateGetResponse_NO_RESOURCE     ClientStateGetResponse_Status = 4
	ClientStateGetResponse_INVALID_ADDRESS ClientStateGetResponse_Status = 5
)

var ClientStateGetResponse_Status_name = map[int32]string{
	0: "OK",
	1: "INTERNAL_ERROR",
	2: "NOT_READY",
	3: "NO_ROOT",
	4: "NO_RESOURCE",
	5: "INVALID_ADDRESS",
}
var ClientStateGetResponse_Status_value = map[string]int32{
	"OK":              0,
	"INTERNAL_ERROR":  1,
	"NOT_READY":       2,
	"NO_ROOT":         3,
	"NO_RESOURCE":     4,
	"INVALID_ADDRESS": 5,
}

func (x ClientStateGetResponse_Status) String() string {
	return proto.EnumName(ClientStateGetResponse_Status_name, int32(x))
}
func (ClientStateGetResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{14, 0}
}

type ClientBlockListResponse_Status int32

const (
	ClientBlockListResponse_OK             ClientBlockListResponse_Status = 0
	ClientBlockListResponse_INTERNAL_ERROR ClientBlockListResponse_Status = 1
	ClientBlockListResponse_NOT_READY      ClientBlockListResponse_Status = 2
	ClientBlockListResponse_NO_ROOT        ClientBlockListResponse_Status = 3
	ClientBlockListResponse_NO_RESOURCE    ClientBlockListResponse_Status = 4
	ClientBlockListResponse_INVALID_PAGING ClientBlockListResponse_Status = 5
	ClientBlockListResponse_INVALID_SORT   ClientBlockListResponse_Status = 6
)

var ClientBlockListResponse_Status_name = map[int32]string{
	0: "OK",
	1: "INTERNAL_ERROR",
	2: "NOT_READY",
	3: "NO_ROOT",
	4: "NO_RESOURCE",
	5: "INVALID_PAGING",
	6: "INVALID_SORT",
}
var ClientBlockListResponse_Status_value = map[string]int32{
	"OK":             0,
	"INTERNAL_ERROR": 1,
	"NOT_READY":      2,
	"NO_ROOT":        3,
	"NO_RESOURCE":    4,
	"INVALID_PAGING": 5,
	"INVALID_SORT":   6,
}

func (x ClientBlockListResponse_Status) String() string {
	return proto.EnumName(ClientBlockListResponse_Status_name, int32(x))
}
func (ClientBlockListResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{16, 0}
}

type ClientBlockGetResponse_Status int32

const (
	ClientBlockGetResponse_OK             ClientBlockGetResponse_Status = 0
	ClientBlockGetResponse_INTERNAL_ERROR ClientBlockGetResponse_Status = 1
	ClientBlockGetResponse_NO_RESOURCE    ClientBlockGetResponse_Status = 4
)

var ClientBlockGetResponse_Status_name = map[int32]string{
	0: "OK",
	1: "INTERNAL_ERROR",
	4: "NO_RESOURCE",
}
var ClientBlockGetResponse_Status_value = map[string]int32{
	"OK":             0,
	"INTERNAL_ERROR": 1,
	"NO_RESOURCE":    4,
}

func (x ClientBlockGetResponse_Status) String() string {
	return proto.EnumName(ClientBlockGetResponse_Status_name, int32(x))
}
func (ClientBlockGetResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{18, 0}
}

type ClientBatchListResponse_Status int32

const (
	ClientBatchListResponse_OK             ClientBatchListResponse_Status = 0
	ClientBatchListResponse_INTERNAL_ERROR ClientBatchListResponse_Status = 1
	ClientBatchListResponse_NOT_READY      ClientBatchListResponse_Status = 2
	ClientBatchListResponse_NO_ROOT        ClientBatchListResponse_Status = 3
	ClientBatchListResponse_NO_RESOURCE    ClientBatchListResponse_Status = 4
	ClientBatchListResponse_INVALID_PAGING ClientBatchListResponse_Status = 5
	ClientBatchListResponse_INVALID_SORT   ClientBatchListResponse_Status = 6
)

var ClientBatchListResponse_Status_name = map[int32]string{
	0: "OK",
	1: "INTERNAL_ERROR",
	2: "NOT_READY",
	3: "NO_ROOT",
	4: "NO_RESOURCE",
	5: "INVALID_PAGING",
	6: "INVALID_SORT",
}
var ClientBatchListResponse_Status_value = map[string]int32{
	"OK":             0,
	"INTERNAL_ERROR": 1,
	"NOT_READY":      2,
	"NO_ROOT":        3,
	"NO_RESOURCE":    4,
	"INVALID_PAGING": 5,
	"INVALID_SORT":   6,
}

func (x ClientBatchListResponse_Status) String() string {
	return proto.EnumName(ClientBatchListResponse_Status_name, int32(x))
}
func (ClientBatchListResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{20, 0}
}

type ClientBatchGetResponse_Status int32

const (
	ClientBatchGetResponse_OK             ClientBatchGetResponse_Status = 0
	ClientBatchGetResponse_INTERNAL_ERROR ClientBatchGetResponse_Status = 1
	ClientBatchGetResponse_NO_RESOURCE    ClientBatchGetResponse_Status = 4
)

var ClientBatchGetResponse_Status_name = map[int32]string{
	0: "OK",
	1: "INTERNAL_ERROR",
	4: "NO_RESOURCE",
}
var ClientBatchGetResponse_Status_value = map[string]int32{
	"OK":             0,
	"INTERNAL_ERROR": 1,
	"NO_RESOURCE":    4,
}

func (x ClientBatchGetResponse_Status) String() string {
	return proto.EnumName(ClientBatchGetResponse_Status_name, int32(x))
}
func (ClientBatchGetResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{22, 0}
}

type ClientTransactionListResponse_Status int32

const (
	ClientTransactionListResponse_OK             ClientTransactionListResponse_Status = 0
	ClientTransactionListResponse_INTERNAL_ERROR ClientTransactionListResponse_Status = 1
	ClientTransactionListResponse_NOT_READY      ClientTransactionListResponse_Status = 2
	ClientTransactionListResponse_NO_ROOT        ClientTransactionListResponse_Status = 3
	ClientTransactionListResponse_NO_RESOURCE    ClientTransactionListResponse_Status = 4
	ClientTransactionListResponse_INVALID_PAGING ClientTransactionListResponse_Status = 5
	ClientTransactionListResponse_INVALID_SORT   ClientTransactionListResponse_Status = 6
)

var ClientTransactionListResponse_Status_name = map[int32]string{
	0: "OK",
	1: "INTERNAL_ERROR",
	2: "NOT_READY",
	3: "NO_ROOT",
	4: "NO_RESOURCE",
	5: "INVALID_PAGING",
	6: "INVALID_SORT",
}
var ClientTransactionListResponse_Status_value = map[string]int32{
	"OK":             0,
	"INTERNAL_ERROR": 1,
	"NOT_READY":      2,
	"NO_ROOT":        3,
	"NO_RESOURCE":    4,
	"INVALID_PAGING": 5,
	"INVALID_SORT":   6,
}

func (x ClientTransactionListResponse_Status) String() string {
	return proto.EnumName(ClientTransactionListResponse_Status_name, int32(x))
}
func (ClientTransactionListResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{24, 0}
}

type ClientTransactionGetResponse_Status int32

const (
	ClientTransactionGetResponse_OK             ClientTransactionGetResponse_Status = 0
	ClientTransactionGetResponse_INTERNAL_ERROR ClientTransactionGetResponse_Status = 1
	ClientTransactionGetResponse_NO_RESOURCE    ClientTransactionGetResponse_Status = 4
)

var ClientTransactionGetResponse_Status_name = map[int32]string{
	0: "OK",
	1: "INTERNAL_ERROR",
	4: "NO_RESOURCE",
}
var ClientTransactionGetResponse_Status_value = map[string]int32{
	"OK":             0,
	"INTERNAL_ERROR": 1,
	"NO_RESOURCE":    4,
}

func (x ClientTransactionGetResponse_Status) String() string {
	return proto.EnumName(ClientTransactionGetResponse_Status_name, int32(x))
}
func (ClientTransactionGetResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{26, 0}
}

// An entry in the State
type Leaf struct {
	Address string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Data    []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Leaf) Reset()                    { *m = Leaf{} }
func (m *Leaf) String() string            { return proto.CompactTextString(m) }
func (*Leaf) ProtoMessage()               {}
func (*Leaf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Leaf) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Leaf) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Information about the status of a batch submitted to the validator.
//
// Attributes:
//     batch_id: The id (header_signature) of the batch
//     status: The committed status of the batch
//     invalid_transactions: Info for transactions that failed, if any
//
// Statuses:
//     COMMITTED - the batch was accepted and has been committed to the chain
//     INVALID - the batch failed validation, it should be resubmitted
//     PENDING - the batch is still being processed
//     UNKNOWN - no status for the batch could be found (possibly invalid)
type BatchStatus struct {
	BatchId             string                            `protobuf:"bytes,1,opt,name=batch_id,json=batchId" json:"batch_id,omitempty"`
	Status              BatchStatus_Status                `protobuf:"varint,2,opt,name=status,enum=BatchStatus_Status" json:"status,omitempty"`
	InvalidTransactions []*BatchStatus_InvalidTransaction `protobuf:"bytes,3,rep,name=invalid_transactions,json=invalidTransactions" json:"invalid_transactions,omitempty"`
}

func (m *BatchStatus) Reset()                    { *m = BatchStatus{} }
func (m *BatchStatus) String() string            { return proto.CompactTextString(m) }
func (*BatchStatus) ProtoMessage()               {}
func (*BatchStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BatchStatus) GetBatchId() string {
	if m != nil {
		return m.BatchId
	}
	return ""
}

func (m *BatchStatus) GetStatus() BatchStatus_Status {
	if m != nil {
		return m.Status
	}
	return BatchStatus_COMMITTED
}

func (m *BatchStatus) GetInvalidTransactions() []*BatchStatus_InvalidTransaction {
	if m != nil {
		return m.InvalidTransactions
	}
	return nil
}

type BatchStatus_InvalidTransaction struct {
	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
	Message       string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	ExtendedData  []byte `protobuf:"bytes,3,opt,name=extended_data,json=extendedData,proto3" json:"extended_data,omitempty"`
}

func (m *BatchStatus_InvalidTransaction) Reset()         { *m = BatchStatus_InvalidTransaction{} }
func (m *BatchStatus_InvalidTransaction) String() string { return proto.CompactTextString(m) }
func (*BatchStatus_InvalidTransaction) ProtoMessage()    {}
func (*BatchStatus_InvalidTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 0}
}

func (m *BatchStatus_InvalidTransaction) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *BatchStatus_InvalidTransaction) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *BatchStatus_InvalidTransaction) GetExtendedData() []byte {
	if m != nil {
		return m.ExtendedData
	}
	return nil
}

// Paging controls to be sent with List requests.
// Attributes:
//     start_id: The id of a resource to start the page with
//     end_id: The id of a resource to end the page with
//     min_index: A resource index relative to the query, the newest being 0
//     count: The number of results per page, defaults to and maxes out at 1000
type PagingControls struct {
	// Types that are valid to be assigned to LocationMarker:
	//	*PagingControls_StartId
	//	*PagingControls_EndId
	//	*PagingControls_StartIndex
	LocationMarker isPagingControls_LocationMarker `protobuf_oneof:"location_marker"`
	Count          int32                           `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
}

func (m *PagingControls) Reset()                    { *m = PagingControls{} }
func (m *PagingControls) String() string            { return proto.CompactTextString(m) }
func (*PagingControls) ProtoMessage()               {}
func (*PagingControls) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type isPagingControls_LocationMarker interface {
	isPagingControls_LocationMarker()
}

type PagingControls_StartId struct {
	StartId string `protobuf:"bytes,1,opt,name=start_id,json=startId,oneof"`
}
type PagingControls_EndId struct {
	EndId string `protobuf:"bytes,2,opt,name=end_id,json=endId,oneof"`
}
type PagingControls_StartIndex struct {
	StartIndex int32 `protobuf:"varint,3,opt,name=start_index,json=startIndex,oneof"`
}

func (*PagingControls_StartId) isPagingControls_LocationMarker()    {}
func (*PagingControls_EndId) isPagingControls_LocationMarker()      {}
func (*PagingControls_StartIndex) isPagingControls_LocationMarker() {}

func (m *PagingControls) GetLocationMarker() isPagingControls_LocationMarker {
	if m != nil {
		return m.LocationMarker
	}
	return nil
}

func (m *PagingControls) GetStartId() string {
	if x, ok := m.GetLocationMarker().(*PagingControls_StartId); ok {
		return x.StartId
	}
	return ""
}

func (m *PagingControls) GetEndId() string {
	if x, ok := m.GetLocationMarker().(*PagingControls_EndId); ok {
		return x.EndId
	}
	return ""
}

func (m *PagingControls) GetStartIndex() int32 {
	if x, ok := m.GetLocationMarker().(*PagingControls_StartIndex); ok {
		return x.StartIndex
	}
	return 0
}

func (m *PagingControls) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PagingControls) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PagingControls_OneofMarshaler, _PagingControls_OneofUnmarshaler, _PagingControls_OneofSizer, []interface{}{
		(*PagingControls_StartId)(nil),
		(*PagingControls_EndId)(nil),
		(*PagingControls_StartIndex)(nil),
	}
}

func _PagingControls_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PagingControls)
	// location_marker
	switch x := m.LocationMarker.(type) {
	case *PagingControls_StartId:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.StartId)
	case *PagingControls_EndId:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.EndId)
	case *PagingControls_StartIndex:
		b.EncodeVarint(3<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.StartIndex))
	case nil:
	default:
		return fmt.Errorf("PagingControls.LocationMarker has unexpected type %T", x)
	}
	return nil
}

func _PagingControls_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PagingControls)
	switch tag {
	case 1: // location_marker.start_id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.LocationMarker = &PagingControls_StartId{x}
		return true, err
	case 2: // location_marker.end_id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.LocationMarker = &PagingControls_EndId{x}
		return true, err
	case 3: // location_marker.start_index
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.LocationMarker = &PagingControls_StartIndex{int32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _PagingControls_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PagingControls)
	// location_marker
	switch x := m.LocationMarker.(type) {
	case *PagingControls_StartId:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.StartId)))
		n += len(x.StartId)
	case *PagingControls_EndId:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.EndId)))
		n += len(x.EndId)
	case *PagingControls_StartIndex:
		n += proto.SizeVarint(3<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.StartIndex))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Information about the pagination used, sent back with List responses.
// Attributes:
//     next_id: The id of the first resource in the next page
//     previous_id: The id of the last resource in the previous page
//     start_index: The index of the first resource in this page
//     total_resources: The total resources available from the requested query
type PagingResponse struct {
	NextId         string `protobuf:"bytes,1,opt,name=next_id,json=nextId" json:"next_id,omitempty"`
	PreviousId     string `protobuf:"bytes,2,opt,name=previous_id,json=previousId" json:"previous_id,omitempty"`
	StartIndex     int32  `protobuf:"varint,3,opt,name=start_index,json=startIndex" json:"start_index,omitempty"`
	TotalResources int32  `protobuf:"varint,4,opt,name=total_resources,json=totalResources" json:"total_resources,omitempty"`
}

func (m *PagingResponse) Reset()                    { *m = PagingResponse{} }
func (m *PagingResponse) String() string            { return proto.CompactTextString(m) }
func (*PagingResponse) ProtoMessage()               {}
func (*PagingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PagingResponse) GetNextId() string {
	if m != nil {
		return m.NextId
	}
	return ""
}

func (m *PagingResponse) GetPreviousId() string {
	if m != nil {
		return m.PreviousId
	}
	return ""
}

func (m *PagingResponse) GetStartIndex() int32 {
	if m != nil {
		return m.StartIndex
	}
	return 0
}

func (m *PagingResponse) GetTotalResources() int32 {
	if m != nil {
		return m.TotalResources
	}
	return 0
}

// Sorting controls to be sent with List requests. More than one can be sent.
// If so, the first is used, and additional controls are tie-breakers.
// Attributes:
//     keys: Nested set of keys to sort by (i.e. ['header', 'signer_pubkey'])
//     reverse: Whether or not to reverse the sort (i.e. descending order)
//     compare_length: Sorts by value length, rather than the property itself
type SortControls struct {
	Keys          []string `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"`
	Reverse       bool     `protobuf:"varint,2,opt,name=reverse" json:"reverse,omitempty"`
	CompareLength bool     `protobuf:"varint,3,opt,name=compare_length,json=compareLength" json:"compare_length,omitempty"`
}

func (m *SortControls) Reset()                    { *m = SortControls{} }
func (m *SortControls) String() string            { return proto.CompactTextString(m) }
func (*SortControls) ProtoMessage()               {}
func (*SortControls) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SortControls) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *SortControls) GetReverse() bool {
	if m != nil {
		return m.Reverse
	}
	return false
}

func (m *SortControls) GetCompareLength() bool {
	if m != nil {
		return m.CompareLength
	}
	return false
}

// Submits a list of Batches to be added to the blockchain.
// If `wait_for_commit` is set to true, the validator will wait to respond
// until all batches are committed, or until the specified `timeout`
// in seconds has elapsed. Defaults to 300.
type ClientBatchSubmitRequest struct {
	Batches       []*batch.Batch `protobuf:"bytes,1,rep,name=batches" json:"batches,omitempty"`
	WaitForCommit bool           `protobuf:"varint,2,opt,name=wait_for_commit,json=waitForCommit" json:"wait_for_commit,omitempty"`
	Timeout       int32          `protobuf:"varint,3,opt,name=timeout" json:"timeout,omitempty"`
}

func (m *ClientBatchSubmitRequest) Reset()                    { *m = ClientBatchSubmitRequest{} }
func (m *ClientBatchSubmitRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientBatchSubmitRequest) ProtoMessage()               {}
func (*ClientBatchSubmitRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ClientBatchSubmitRequest) GetBatches() []*batch.Batch {
	if m != nil {
		return m.Batches
	}
	return nil
}

func (m *ClientBatchSubmitRequest) GetWaitForCommit() bool {
	if m != nil {
		return m.WaitForCommit
	}
	return false
}

func (m *ClientBatchSubmitRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

// This is a response to a submission of one or more Batches.
// If `wait_for_commit` was set in the request, this response will include a
// `batch_statuses` property, with the status of each batch submitted.
// Statuses:
//   * OK - everything with the request worked as expected
//   * INTERNAL_ERROR - general error, such as protobuf failing to deserialize
//   * INVALID_BATCH - the batch failed validation, likely due to a bad signature
type ClientBatchSubmitResponse struct {
	Status        ClientBatchSubmitResponse_Status `protobuf:"varint,1,opt,name=status,enum=ClientBatchSubmitResponse_Status" json:"status,omitempty"`
	BatchStatuses []*BatchStatus                   `protobuf:"bytes,2,rep,name=batch_statuses,json=batchStatuses" json:"batch_statuses,omitempty"`
}

func (m *ClientBatchSubmitResponse) Reset()                    { *m = ClientBatchSubmitResponse{} }
func (m *ClientBatchSubmitResponse) String() string            { return proto.CompactTextString(m) }
func (*ClientBatchSubmitResponse) ProtoMessage()               {}
func (*ClientBatchSubmitResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ClientBatchSubmitResponse) GetStatus() ClientBatchSubmitResponse_Status {
	if m != nil {
		return m.Status
	}
	return ClientBatchSubmitResponse_OK
}

func (m *ClientBatchSubmitResponse) GetBatchStatuses() []*BatchStatus {
	if m != nil {
		return m.BatchStatuses
	}
	return nil
}

// A request for the status of one or more batches, specified by id.
// If `wait_for_commit` is set to true, the validator will wait to respond
// until all batches are committed, or until the specified `timeout`
// in seconds has elapsed. Defaults to 300.
type ClientBatchStatusRequest struct {
	BatchIds      []string `protobuf:"bytes,1,rep,name=batch_ids,json=batchIds" json:"batch_ids,omitempty"`
	WaitForCommit bool     `protobuf:"varint,2,opt,name=wait_for_commit,json=waitForCommit" json:"wait_for_commit,omitempty"`
	Timeout       int32    `protobuf:"varint,3,opt,name=timeout" json:"timeout,omitempty"`
}

func (m *ClientBatchStatusRequest) Reset()                    { *m = ClientBatchStatusRequest{} }
func (m *ClientBatchStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientBatchStatusRequest) ProtoMessage()               {}
func (*ClientBatchStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ClientBatchStatusRequest) GetBatchIds() []string {
	if m != nil {
		return m.BatchIds
	}
	return nil
}

func (m *ClientBatchStatusRequest) GetWaitForCommit() bool {
	if m != nil {
		return m.WaitForCommit
	}
	return false
}

func (m *ClientBatchStatusRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

// This is a response to a request for the status of specific batches.
// Statuses:
//   * OK - everything with the request worked as expected
//   * INTERNAL_ERROR - general error, such as protobuf failing to deserialize
//   * NO_RESOURCE - the response contains no data, likely because
//     no ids were specified in the request
type ClientBatchStatusResponse struct {
	Status        ClientBatchStatusResponse_Status `protobuf:"varint,1,opt,name=status,enum=ClientBatchStatusResponse_Status" json:"status,omitempty"`
	BatchStatuses []*BatchStatus                   `protobuf:"bytes,2,rep,name=batch_statuses,json=batchStatuses" json:"batch_statuses,omitempty"`
}

func (m *ClientBatchStatusResponse) Reset()                    { *m = ClientBatchStatusResponse{} }
func (m *ClientBatchStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*ClientBatchStatusResponse) ProtoMessage()               {}
func (*ClientBatchStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ClientBatchStatusResponse) GetStatus() ClientBatchStatusResponse_Status {
	if m != nil {
		return m.Status
	}
	return ClientBatchStatusResponse_OK
}

func (m *ClientBatchStatusResponse) GetBatchStatuses() []*BatchStatus {
	if m != nil {
		return m.BatchStatuses
	}
	return nil
}

type ClientStateCurrentRequest struct {
}

func (m *ClientStateCurrentRequest) Reset()                    { *m = ClientStateCurrentRequest{} }
func (m *ClientStateCurrentRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientStateCurrentRequest) ProtoMessage()               {}
func (*ClientStateCurrentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type ClientStateCurrentResponse struct {
	Status     ClientStateCurrentResponse_Status `protobuf:"varint,1,opt,name=status,enum=ClientStateCurrentResponse_Status" json:"status,omitempty"`
	MerkleRoot string                            `protobuf:"bytes,2,opt,name=merkle_root,json=merkleRoot" json:"merkle_root,omitempty"`
}

func (m *ClientStateCurrentResponse) Reset()                    { *m = ClientStateCurrentResponse{} }
func (m *ClientStateCurrentResponse) String() string            { return proto.CompactTextString(m) }
func (*ClientStateCurrentResponse) ProtoMessage()               {}
func (*ClientStateCurrentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ClientStateCurrentResponse) GetStatus() ClientStateCurrentResponse_Status {
	if m != nil {
		return m.Status
	}
	return ClientStateCurrentResponse_OK
}

func (m *ClientStateCurrentResponse) GetMerkleRoot() string {
	if m != nil {
		return m.MerkleRoot
	}
	return ""
}

// A request to list every entry in the merkle tree. Defaults to the most
// current tree, but can fetch older state by specifying either a merkle root
// or a previous head block's id. Results can be further filtered by
// specifying a subtree with a partial address.
type ClientStateListRequest struct {
	// Types that are valid to be assigned to RootKey:
	//	*ClientStateListRequest_MerkleRoot
	//	*ClientStateListRequest_HeadId
	RootKey isClientStateListRequest_RootKey `protobuf_oneof:"root_key"`
	Address string                           `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	Paging  *PagingControls                  `protobuf:"bytes,4,opt,name=paging" json:"paging,omitempty"`
	Sorting []*SortControls                  `protobuf:"bytes,5,rep,name=sorting" json:"sorting,omitempty"`
}

func (m *ClientStateListRequest) Reset()                    { *m = ClientStateListRequest{} }
func (m *ClientStateListRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientStateListRequest) ProtoMessage()               {}
func (*ClientStateListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type isClientStateListRequest_RootKey interface {
	isClientStateListRequest_RootKey()
}

type ClientStateListRequest_MerkleRoot struct {
	MerkleRoot string `protobuf:"bytes,1,opt,name=merkle_root,json=merkleRoot,oneof"`
}
type ClientStateListRequest_HeadId struct {
	HeadId string `protobuf:"bytes,2,opt,name=head_id,json=headId,oneof"`
}

func (*ClientStateListRequest_MerkleRoot) isClientStateListRequest_RootKey() {}
func (*ClientStateListRequest_HeadId) isClientStateListRequest_RootKey()     {}

func (m *ClientStateListRequest) GetRootKey() isClientStateListRequest_RootKey {
	if m != nil {
		return m.RootKey
	}
	return nil
}

func (m *ClientStateListRequest) GetMerkleRoot() string {
	if x, ok := m.GetRootKey().(*ClientStateListRequest_MerkleRoot); ok {
		return x.MerkleRoot
	}
	return ""
}

func (m *ClientStateListRequest) GetHeadId() string {
	if x, ok := m.GetRootKey().(*ClientStateListRequest_HeadId); ok {
		return x.HeadId
	}
	return ""
}

func (m *ClientStateListRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ClientStateListRequest) GetPaging() *PagingControls {
	if m != nil {
		return m.Paging
	}
	return nil
}

func (m *ClientStateListRequest) GetSorting() []*SortControls {
	if m != nil {
		return m.Sorting
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ClientStateListRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ClientStateListRequest_OneofMarshaler, _ClientStateListRequest_OneofUnmarshaler, _ClientStateListRequest_OneofSizer, []interface{}{
		(*ClientStateListRequest_MerkleRoot)(nil),
		(*ClientStateListRequest_HeadId)(nil),
	}
}

func _ClientStateListRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ClientStateListRequest)
	// root_key
	switch x := m.RootKey.(type) {
	case *ClientStateListRequest_MerkleRoot:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.MerkleRoot)
	case *ClientStateListRequest_HeadId:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.HeadId)
	case nil:
	default:
		return fmt.Errorf("ClientStateListRequest.RootKey has unexpected type %T", x)
	}
	return nil
}

func _ClientStateListRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ClientStateListRequest)
	switch tag {
	case 1: // root_key.merkle_root
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.RootKey = &ClientStateListRequest_MerkleRoot{x}
		return true, err
	case 2: // root_key.head_id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.RootKey = &ClientStateListRequest_HeadId{x}
		return true, err
	default:
		return false, nil
	}
}

func _ClientStateListRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ClientStateListRequest)
	// root_key
	switch x := m.RootKey.(type) {
	case *ClientStateListRequest_MerkleRoot:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.MerkleRoot)))
		n += len(x.MerkleRoot)
	case *ClientStateListRequest_HeadId:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.HeadId)))
		n += len(x.HeadId)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ClientStateListResponse struct {
	Status ClientStateListResponse_Status `protobuf:"varint,1,opt,name=status,enum=ClientStateListResponse_Status" json:"status,omitempty"`
	Leaves []*Leaf                        `protobuf:"bytes,2,rep,name=leaves" json:"leaves,omitempty"`
	HeadId string                         `protobuf:"bytes,3,opt,name=head_id,json=headId" json:"head_id,omitempty"`
	Paging *PagingResponse                `protobuf:"bytes,4,opt,name=paging" json:"paging,omitempty"`
}

func (m *ClientStateListResponse) Reset()                    { *m = ClientStateListResponse{} }
func (m *ClientStateListResponse) String() string            { return proto.CompactTextString(m) }
func (*ClientStateListResponse) ProtoMessage()               {}
func (*ClientStateListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ClientStateListResponse) GetStatus() ClientStateListResponse_Status {
	if m != nil {
		return m.Status
	}
	return ClientStateListResponse_OK
}

func (m *ClientStateListResponse) GetLeaves() []*Leaf {
	if m != nil {
		return m.Leaves
	}
	return nil
}

func (m *ClientStateListResponse) GetHeadId() string {
	if m != nil {
		return m.HeadId
	}
	return ""
}

func (m *ClientStateListResponse) GetPaging() *PagingResponse {
	if m != nil {
		return m.Paging
	}
	return nil
}

// A request from a client for a particular entry in the merkle tree.
// Like State List, it defaults to the newest state, but a merkle root
// or head block id can be used to specify older data. Unlike State List
// the request must be provided with a full address that corresponds to
// a single entry.
type ClientStateGetRequest struct {
	// Types that are valid to be assigned to RootKey:
	//	*ClientStateGetRequest_MerkleRoot
	//	*ClientStateGetRequest_HeadId
	RootKey isClientStateGetRequest_RootKey `protobuf_oneof:"root_key"`
	Address string                          `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
}

func (m *ClientStateGetRequest) Reset()                    { *m = ClientStateGetRequest{} }
func (m *ClientStateGetRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientStateGetRequest) ProtoMessage()               {}
func (*ClientStateGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

type isClientStateGetRequest_RootKey interface {
	isClientStateGetRequest_RootKey()
}

type ClientStateGetRequest_MerkleRoot struct {
	MerkleRoot string `protobuf:"bytes,1,opt,name=merkle_root,json=merkleRoot,oneof"`
}
type ClientStateGetRequest_HeadId struct {
	HeadId string `protobuf:"bytes,2,opt,name=head_id,json=headId,oneof"`
}

func (*ClientStateGetRequest_MerkleRoot) isClientStateGetRequest_RootKey() {}
func (*ClientStateGetRequest_HeadId) isClientStateGetRequest_RootKey()     {}

func (m *ClientStateGetRequest) GetRootKey() isClientStateGetRequest_RootKey {
	if m != nil {
		return m.RootKey
	}
	return nil
}

func (m *ClientStateGetRequest) GetMerkleRoot() string {
	if x, ok := m.GetRootKey().(*ClientStateGetRequest_MerkleRoot); ok {
		return x.MerkleRoot
	}
	return ""
}

func (m *ClientStateGetRequest) GetHeadId() string {
	if x, ok := m.GetRootKey().(*ClientStateGetRequest_HeadId); ok {
		return x.HeadId
	}
	return ""
}

func (m *ClientStateGetRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ClientStateGetRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ClientStateGetRequest_OneofMarshaler, _ClientStateGetRequest_OneofUnmarshaler, _ClientStateGetRequest_OneofSizer, []interface{}{
		(*ClientStateGetRequest_MerkleRoot)(nil),
		(*ClientStateGetRequest_HeadId)(nil),
	}
}

func _ClientStateGetRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ClientStateGetRequest)
	// root_key
	switch x := m.RootKey.(type) {
	case *ClientStateGetRequest_MerkleRoot:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.MerkleRoot)
	case *ClientStateGetRequest_HeadId:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.HeadId)
	case nil:
	default:
		return fmt.Errorf("ClientStateGetRequest.RootKey has unexpected type %T", x)
	}
	return nil
}

func _ClientStateGetRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ClientStateGetRequest)
	switch tag {
	case 1: // root_key.merkle_root
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.RootKey = &ClientStateGetRequest_MerkleRoot{x}
		return true, err
	case 2: // root_key.head_id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.RootKey = &ClientStateGetRequest_HeadId{x}
		return true, err
	default:
		return false, nil
	}
}

func _ClientStateGetRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ClientStateGetRequest)
	// root_key
	switch x := m.RootKey.(type) {
	case *ClientStateGetRequest_MerkleRoot:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.MerkleRoot)))
		n += len(x.MerkleRoot)
	case *ClientStateGetRequest_HeadId:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.HeadId)))
		n += len(x.HeadId)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// The response to a State Get Request from the client. Sends back just
// the data stored at the entry, not the address. Also sends back the
// head block id used to facilitate further requests.
//
// Statuses:
//   * OK - everything worked as expected
//   * INTERNAL_ERROR - general error, such as protobuf failing to deserialize
//   * NOT_READY - the validator does not yet have a genesis block
//   * NO_ROOT - the head block or merkle_root specified was not found
//   * NO_RESOURCE - the address specified doesn't exist
//   * INVALID_ADDRESS - address isn't a valid, i.e. it's a subtree (truncated)
type ClientStateGetResponse struct {
	Status ClientStateGetResponse_Status `protobuf:"varint,1,opt,name=status,enum=ClientStateGetResponse_Status" json:"status,omitempty"`
	Value  []byte                        `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	HeadId string                        `protobuf:"bytes,3,opt,name=head_id,json=headId" json:"head_id,omitempty"`
}

func (m *ClientStateGetResponse) Reset()                    { *m = ClientStateGetResponse{} }
func (m *ClientStateGetResponse) String() string            { return proto.CompactTextString(m) }
func (*ClientStateGetResponse) ProtoMessage()               {}
func (*ClientStateGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ClientStateGetResponse) GetStatus() ClientStateGetResponse_Status {
	if m != nil {
		return m.Status
	}
	return ClientStateGetResponse_OK
}

func (m *ClientStateGetResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ClientStateGetResponse) GetHeadId() string {
	if m != nil {
		return m.HeadId
	}
	return ""
}

// A request to return a list of blocks from the validator. May include the id
// of a particular block to be the `head` of the chain being requested. In that
// case the list will include that block (if found), and all blocks previous
// to it on the chain. Can be filtered using specific `block_ids`.
type ClientBlockListRequest struct {
	HeadId   string          `protobuf:"bytes,1,opt,name=head_id,json=headId" json:"head_id,omitempty"`
	BlockIds []string        `protobuf:"bytes,2,rep,name=block_ids,json=blockIds" json:"block_ids,omitempty"`
	Paging   *PagingControls `protobuf:"bytes,3,opt,name=paging" json:"paging,omitempty"`
	Sorting  []*SortControls `protobuf:"bytes,4,rep,name=sorting" json:"sorting,omitempty"`
}

func (m *ClientBlockListRequest) Reset()                    { *m = ClientBlockListRequest{} }
func (m *ClientBlockListRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientBlockListRequest) ProtoMessage()               {}
func (*ClientBlockListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *ClientBlockListRequest) GetHeadId() string {
	if m != nil {
		return m.HeadId
	}
	return ""
}

func (m *ClientBlockListRequest) GetBlockIds() []string {
	if m != nil {
		return m.BlockIds
	}
	return nil
}

func (m *ClientBlockListRequest) GetPaging() *PagingControls {
	if m != nil {
		return m.Paging
	}
	return nil
}

func (m *ClientBlockListRequest) GetSorting() []*SortControls {
	if m != nil {
		return m.Sorting
	}
	return nil
}

// A response that lists a chain of blocks with the newest at the beginning,
// and the oldest (genesis) block at the end.
//
// Statuses:
//   * OK - everything worked as expected
//   * INTERNAL_ERROR - general error, such as protobuf failing to deserialize
//   * NOT_READY - the validator does not yet have a genesis block
//   * NO_ROOT - the head block specified was not found
//   * NO_RESOURCE - no blocks were found with the parameters specified
//   * INVALID_PAGING - the paging controls were malformed or out of range
//   * INVALID_SORT - the sorting controls were malformed or invalid
type ClientBlockListResponse struct {
	Status ClientBlockListResponse_Status `protobuf:"varint,1,opt,name=status,enum=ClientBlockListResponse_Status" json:"status,omitempty"`
	Blocks []*block.Block                 `protobuf:"bytes,2,rep,name=blocks" json:"blocks,omitempty"`
	HeadId string                         `protobuf:"bytes,3,opt,name=head_id,json=headId" json:"head_id,omitempty"`
	Paging *PagingResponse                `protobuf:"bytes,4,opt,name=paging" json:"paging,omitempty"`
}

func (m *ClientBlockListResponse) Reset()                    { *m = ClientBlockListResponse{} }
func (m *ClientBlockListResponse) String() string            { return proto.CompactTextString(m) }
func (*ClientBlockListResponse) ProtoMessage()               {}
func (*ClientBlockListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ClientBlockListResponse) GetStatus() ClientBlockListResponse_Status {
	if m != nil {
		return m.Status
	}
	return ClientBlockListResponse_OK
}

func (m *ClientBlockListResponse) GetBlocks() []*block.Block {
	if m != nil {
		return m.Blocks
	}
	return nil
}

func (m *ClientBlockListResponse) GetHeadId() string {
	if m != nil {
		return m.HeadId
	}
	return ""
}

func (m *ClientBlockListResponse) GetPaging() *PagingResponse {
	if m != nil {
		return m.Paging
	}
	return nil
}

// A request to return a specific block from the validator. The block must be
// specified by its unique id, in this case the block's header signature
type ClientBlockGetRequest struct {
	BlockId  string `protobuf:"bytes,1,opt,name=block_id,json=blockId" json:"block_id,omitempty"`
	BlockNum uint64 `protobuf:"varint,2,opt,name=block_num,json=blockNum" json:"block_num,omitempty"`
}

func (m *ClientBlockGetRequest) Reset()                    { *m = ClientBlockGetRequest{} }
func (m *ClientBlockGetRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientBlockGetRequest) ProtoMessage()               {}
func (*ClientBlockGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ClientBlockGetRequest) GetBlockId() string {
	if m != nil {
		return m.BlockId
	}
	return ""
}

func (m *ClientBlockGetRequest) GetBlockNum() uint64 {
	if m != nil {
		return m.BlockNum
	}
	return 0
}

// A response that returns the block specified by a ClientBlockGetRequest.
//
// Statuses:
//   * OK - everything worked as expected
//   * INTERNAL_ERROR - general error, such as protobuf failing to deserialize
//   * NO_RESOURCE - no block with the specified id exists
type ClientBlockGetResponse struct {
	Status ClientBlockGetResponse_Status `protobuf:"varint,1,opt,name=status,enum=ClientBlockGetResponse_Status" json:"status,omitempty"`
	Block  *block.Block                  `protobuf:"bytes,2,opt,name=block" json:"block,omitempty"`
}

func (m *ClientBlockGetResponse) Reset()                    { *m = ClientBlockGetResponse{} }
func (m *ClientBlockGetResponse) String() string            { return proto.CompactTextString(m) }
func (*ClientBlockGetResponse) ProtoMessage()               {}
func (*ClientBlockGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *ClientBlockGetResponse) GetStatus() ClientBlockGetResponse_Status {
	if m != nil {
		return m.Status
	}
	return ClientBlockGetResponse_OK
}

func (m *ClientBlockGetResponse) GetBlock() *block.Block {
	if m != nil {
		return m.Block
	}
	return nil
}

// A request to return a list of batches from the validator. May include the id
// of a particular block to be the `head` of the chain being requested. In that
// case the list will include the batches from that block, and all batches
// previous to that block on the chain. Filter with specific `batch_ids`.
type ClientBatchListRequest struct {
	HeadId   string          `protobuf:"bytes,1,opt,name=head_id,json=headId" json:"head_id,omitempty"`
	BatchIds []string        `protobuf:"bytes,2,rep,name=batch_ids,json=batchIds" json:"batch_ids,omitempty"`
	Paging   *PagingControls `protobuf:"bytes,3,opt,name=paging" json:"paging,omitempty"`
	Sorting  []*SortControls `protobuf:"bytes,4,rep,name=sorting" json:"sorting,omitempty"`
}

func (m *ClientBatchListRequest) Reset()                    { *m = ClientBatchListRequest{} }
func (m *ClientBatchListRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientBatchListRequest) ProtoMessage()               {}
func (*ClientBatchListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *ClientBatchListRequest) GetHeadId() string {
	if m != nil {
		return m.HeadId
	}
	return ""
}

func (m *ClientBatchListRequest) GetBatchIds() []string {
	if m != nil {
		return m.BatchIds
	}
	return nil
}

func (m *ClientBatchListRequest) GetPaging() *PagingControls {
	if m != nil {
		return m.Paging
	}
	return nil
}

func (m *ClientBatchListRequest) GetSorting() []*SortControls {
	if m != nil {
		return m.Sorting
	}
	return nil
}

// A response that lists batches from newest to oldest.
//
// Statuses:
//   * OK - everything worked as expected
//   * INTERNAL_ERROR - general error, such as protobuf failing to deserialize
//   * NOT_READY - the validator does not yet have a genesis block
//   * NO_ROOT - the head block specified was not found
//   * NO_RESOURCE - no batches were found with the parameters specified
//   * INVALID_PAGING - the paging controls were malformed or out of range
//   * INVALID_SORT - the sorting controls were malformed or invalid
type ClientBatchListResponse struct {
	Status  ClientBatchListResponse_Status `protobuf:"varint,1,opt,name=status,enum=ClientBatchListResponse_Status" json:"status,omitempty"`
	Batches []*batch.Batch                 `protobuf:"bytes,2,rep,name=batches" json:"batches,omitempty"`
	HeadId  string                         `protobuf:"bytes,3,opt,name=head_id,json=headId" json:"head_id,omitempty"`
	Paging  *PagingResponse                `protobuf:"bytes,4,opt,name=paging" json:"paging,omitempty"`
}

func (m *ClientBatchListResponse) Reset()                    { *m = ClientBatchListResponse{} }
func (m *ClientBatchListResponse) String() string            { return proto.CompactTextString(m) }
func (*ClientBatchListResponse) ProtoMessage()               {}
func (*ClientBatchListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ClientBatchListResponse) GetStatus() ClientBatchListResponse_Status {
	if m != nil {
		return m.Status
	}
	return ClientBatchListResponse_OK
}

func (m *ClientBatchListResponse) GetBatches() []*batch.Batch {
	if m != nil {
		return m.Batches
	}
	return nil
}

func (m *ClientBatchListResponse) GetHeadId() string {
	if m != nil {
		return m.HeadId
	}
	return ""
}

func (m *ClientBatchListResponse) GetPaging() *PagingResponse {
	if m != nil {
		return m.Paging
	}
	return nil
}

// Fetches a specific batch by its id (header_signature) from the blockchain.
type ClientBatchGetRequest struct {
	BatchId string `protobuf:"bytes,1,opt,name=batch_id,json=batchId" json:"batch_id,omitempty"`
}

func (m *ClientBatchGetRequest) Reset()                    { *m = ClientBatchGetRequest{} }
func (m *ClientBatchGetRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientBatchGetRequest) ProtoMessage()               {}
func (*ClientBatchGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *ClientBatchGetRequest) GetBatchId() string {
	if m != nil {
		return m.BatchId
	}
	return ""
}

// A response that returns the batch specified by a ClientBatchGetRequest.
//
// Statuses:
//   * OK - everything worked as expected, batch has been fetched
//   * INTERNAL_ERROR - general error, such as protobuf failing to deserialize
//   * NO_RESOURCE - no batch with the specified id exists
type ClientBatchGetResponse struct {
	Status ClientBatchGetResponse_Status `protobuf:"varint,1,opt,name=status,enum=ClientBatchGetResponse_Status" json:"status,omitempty"`
	Batch  *batch.Batch                  `protobuf:"bytes,2,opt,name=batch" json:"batch,omitempty"`
}

func (m *ClientBatchGetResponse) Reset()                    { *m = ClientBatchGetResponse{} }
func (m *ClientBatchGetResponse) String() string            { return proto.CompactTextString(m) }
func (*ClientBatchGetResponse) ProtoMessage()               {}
func (*ClientBatchGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *ClientBatchGetResponse) GetStatus() ClientBatchGetResponse_Status {
	if m != nil {
		return m.Status
	}
	return ClientBatchGetResponse_OK
}

func (m *ClientBatchGetResponse) GetBatch() *batch.Batch {
	if m != nil {
		return m.Batch
	}
	return nil
}

// A request to return a list of txns from the validator. May include the id
// of a particular block to be the `head` of the chain being requested. In that
// case the list will include the txns from that block, and all txns
// previous to that block on the chain. Filter with specific `transaction_ids`.
type ClientTransactionListRequest struct {
	HeadId         string          `protobuf:"bytes,1,opt,name=head_id,json=headId" json:"head_id,omitempty"`
	TransactionIds []string        `protobuf:"bytes,2,rep,name=transaction_ids,json=transactionIds" json:"transaction_ids,omitempty"`
	Paging         *PagingControls `protobuf:"bytes,3,opt,name=paging" json:"paging,omitempty"`
	Sorting        []*SortControls `protobuf:"bytes,4,rep,name=sorting" json:"sorting,omitempty"`
}

func (m *ClientTransactionListRequest) Reset()                    { *m = ClientTransactionListRequest{} }
func (m *ClientTransactionListRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientTransactionListRequest) ProtoMessage()               {}
func (*ClientTransactionListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *ClientTransactionListRequest) GetHeadId() string {
	if m != nil {
		return m.HeadId
	}
	return ""
}

func (m *ClientTransactionListRequest) GetTransactionIds() []string {
	if m != nil {
		return m.TransactionIds
	}
	return nil
}

func (m *ClientTransactionListRequest) GetPaging() *PagingControls {
	if m != nil {
		return m.Paging
	}
	return nil
}

func (m *ClientTransactionListRequest) GetSorting() []*SortControls {
	if m != nil {
		return m.Sorting
	}
	return nil
}

// A response that lists transactions from newest to oldest.
//
// Statuses:
//   * OK - everything worked as expected
//   * INTERNAL_ERROR - general error, such as protobuf failing to deserialize
//   * NOT_READY - the validator does not yet have a genesis block
//   * NO_ROOT - the head block specified was not found
//   * NO_RESOURCE - no txns were found with the parameters specified
//   * INVALID_PAGING - the paging controls were malformed or out of range
//   * INVALID_SORT - the sorting controls were malformed or invalid
type ClientTransactionListResponse struct {
	Status       ClientTransactionListResponse_Status `protobuf:"varint,1,opt,name=status,enum=ClientTransactionListResponse_Status" json:"status,omitempty"`
	Transactions []*transaction.Transaction           `protobuf:"bytes,2,rep,name=transactions" json:"transactions,omitempty"`
	HeadId       string                               `protobuf:"bytes,3,opt,name=head_id,json=headId" json:"head_id,omitempty"`
	Paging       *PagingResponse                      `protobuf:"bytes,4,opt,name=paging" json:"paging,omitempty"`
}

func (m *ClientTransactionListResponse) Reset()                    { *m = ClientTransactionListResponse{} }
func (m *ClientTransactionListResponse) String() string            { return proto.CompactTextString(m) }
func (*ClientTransactionListResponse) ProtoMessage()               {}
func (*ClientTransactionListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *ClientTransactionListResponse) GetStatus() ClientTransactionListResponse_Status {
	if m != nil {
		return m.Status
	}
	return ClientTransactionListResponse_OK
}

func (m *ClientTransactionListResponse) GetTransactions() []*transaction.Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *ClientTransactionListResponse) GetHeadId() string {
	if m != nil {
		return m.HeadId
	}
	return ""
}

func (m *ClientTransactionListResponse) GetPaging() *PagingResponse {
	if m != nil {
		return m.Paging
	}
	return nil
}

// Fetches a specific txn by its id (header_signature) from the blockchain.
type ClientTransactionGetRequest struct {
	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
}

func (m *ClientTransactionGetRequest) Reset()                    { *m = ClientTransactionGetRequest{} }
func (m *ClientTransactionGetRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientTransactionGetRequest) ProtoMessage()               {}
func (*ClientTransactionGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *ClientTransactionGetRequest) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

// A response that returns the txn specified by a ClientTransactionGetRequest.
//
// Statuses:
//   * OK - everything worked as expected, txn has been fetched
//   * INTERNAL_ERROR - general error, such as protobuf failing to deserialize
//   * NO_RESOURCE - no txn with the specified id exists
type ClientTransactionGetResponse struct {
	Status      ClientTransactionGetResponse_Status `protobuf:"varint,1,opt,name=status,enum=ClientTransactionGetResponse_Status" json:"status,omitempty"`
	Transaction *transaction.Transaction            `protobuf:"bytes,2,opt,name=transaction" json:"transaction,omitempty"`
	// Identifier of the block this transaction is in. Not set if the
	// transaction is pending.
	Block string `protobuf:"bytes,3,opt,name=block" json:"block,omitempty"`
}

func (m *ClientTransactionGetResponse) Reset()                    { *m = ClientTransactionGetResponse{} }
func (m *ClientTransactionGetResponse) String() string            { return proto.CompactTextString(m) }
func (*ClientTransactionGetResponse) ProtoMessage()               {}
func (*ClientTransactionGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *ClientTransactionGetResponse) GetStatus() ClientTransactionGetResponse_Status {
	if m != nil {
		return m.Status
	}
	return ClientTransactionGetResponse_OK
}

func (m *ClientTransactionGetResponse) GetTransaction() *transaction.Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *ClientTransactionGetResponse) GetBlock() string {
	if m != nil {
		return m.Block
	}
	return ""
}

func init() {
	proto.RegisterType((*Leaf)(nil), "Leaf")
	proto.RegisterType((*BatchStatus)(nil), "BatchStatus")
	proto.RegisterType((*BatchStatus_InvalidTransaction)(nil), "BatchStatus.InvalidTransaction")
	proto.RegisterType((*PagingControls)(nil), "PagingControls")
	proto.RegisterType((*PagingResponse)(nil), "PagingResponse")
	proto.RegisterType((*SortControls)(nil), "SortControls")
	proto.RegisterType((*ClientBatchSubmitRequest)(nil), "ClientBatchSubmitRequest")
	proto.RegisterType((*ClientBatchSubmitResponse)(nil), "ClientBatchSubmitResponse")
	proto.RegisterType((*ClientBatchStatusRequest)(nil), "ClientBatchStatusRequest")
	proto.RegisterType((*ClientBatchStatusResponse)(nil), "ClientBatchStatusResponse")
	proto.RegisterType((*ClientStateCurrentRequest)(nil), "ClientStateCurrentRequest")
	proto.RegisterType((*ClientStateCurrentResponse)(nil), "ClientStateCurrentResponse")
	proto.RegisterType((*ClientStateListRequest)(nil), "ClientStateListRequest")
	proto.RegisterType((*ClientStateListResponse)(nil), "ClientStateListResponse")
	proto.RegisterType((*ClientStateGetRequest)(nil), "ClientStateGetRequest")
	proto.RegisterType((*ClientStateGetResponse)(nil), "ClientStateGetResponse")
	proto.RegisterType((*ClientBlockListRequest)(nil), "ClientBlockListRequest")
	proto.RegisterType((*ClientBlockListResponse)(nil), "ClientBlockListResponse")
	proto.RegisterType((*ClientBlockGetRequest)(nil), "ClientBlockGetRequest")
	proto.RegisterType((*ClientBlockGetResponse)(nil), "ClientBlockGetResponse")
	proto.RegisterType((*ClientBatchListRequest)(nil), "ClientBatchListRequest")
	proto.RegisterType((*ClientBatchListResponse)(nil), "ClientBatchListResponse")
	proto.RegisterType((*ClientBatchGetRequest)(nil), "ClientBatchGetRequest")
	proto.RegisterType((*ClientBatchGetResponse)(nil), "ClientBatchGetResponse")
	proto.RegisterType((*ClientTransactionListRequest)(nil), "ClientTransactionListRequest")
	proto.RegisterType((*ClientTransactionListResponse)(nil), "ClientTransactionListResponse")
	proto.RegisterType((*ClientTransactionGetRequest)(nil), "ClientTransactionGetRequest")
	proto.RegisterType((*ClientTransactionGetResponse)(nil), "ClientTransactionGetResponse")
	proto.RegisterEnum("BatchStatus_Status", BatchStatus_Status_name, BatchStatus_Status_value)
	proto.RegisterEnum("ClientBatchSubmitResponse_Status", ClientBatchSubmitResponse_Status_name, ClientBatchSubmitResponse_Status_value)
	proto.RegisterEnum("ClientBatchStatusResponse_Status", ClientBatchStatusResponse_Status_name, ClientBatchStatusResponse_Status_value)
	proto.RegisterEnum("ClientStateCurrentResponse_Status", ClientStateCurrentResponse_Status_name, ClientStateCurrentResponse_Status_value)
	proto.RegisterEnum("ClientStateListResponse_Status", ClientStateListResponse_Status_name, ClientStateListResponse_Status_value)
	proto.RegisterEnum("ClientStateGetResponse_Status", ClientStateGetResponse_Status_name, ClientStateGetResponse_Status_value)
	proto.RegisterEnum("ClientBlockListResponse_Status", ClientBlockListResponse_Status_name, ClientBlockListResponse_Status_value)
	proto.RegisterEnum("ClientBlockGetResponse_Status", ClientBlockGetResponse_Status_name, ClientBlockGetResponse_Status_value)
	proto.RegisterEnum("ClientBatchListResponse_Status", ClientBatchListResponse_Status_name, ClientBatchListResponse_Status_value)
	proto.RegisterEnum("ClientBatchGetResponse_Status", ClientBatchGetResponse_Status_name, ClientBatchGetResponse_Status_value)
	proto.RegisterEnum("ClientTransactionListResponse_Status", ClientTransactionListResponse_Status_name, ClientTransactionListResponse_Status_value)
	proto.RegisterEnum("ClientTransactionGetResponse_Status", ClientTransactionGetResponse_Status_name, ClientTransactionGetResponse_Status_value)
}

func init() { proto.RegisterFile("sawtooth_sdk/protobuf/client_pb2/client.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1384 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xd4, 0x58, 0x5b, 0x8f, 0xdb, 0xd4,
	0x13, 0x6f, 0x6e, 0x4e, 0x3a, 0xb9, 0xd6, 0x6d, 0xff, 0x4d, 0xbb, 0xbd, 0xfa, 0x4f, 0x69, 0xa5,
	0x0a, 0x17, 0xa5, 0x40, 0x05, 0x02, 0xa4, 0xdc, 0x68, 0xa3, 0x6e, 0x93, 0xd5, 0xd9, 0x14, 0x04,
	0x2f, 0x96, 0x93, 0x9c, 0xdd, 0xb5, 0x36, 0x89, 0x83, 0x2f, 0xbb, 0x2d, 0x48, 0x7c, 0x08, 0xc4,
	0x07, 0xe0, 0x85, 0x37, 0x2e, 0x12, 0x1f, 0x01, 0xf1, 0x86, 0xc4, 0x3b, 0x1f, 0x00, 0xf1, 0x35,
	0x38, 0x57, 0xc7, 0x76, 0x92, 0xdd, 0x68, 0xd9, 0x3e, 0xec, 0x53, 0x3c, 0x73, 0xe6, 0x78, 0x66,
	0x7e, 0xf3, 0x9b, 0x39, 0xc7, 0x81, 0xb7, 0x5c, 0xf3, 0xd0, 0xb3, 0x6d, 0x6f, 0xcf, 0x70, 0x47,
	0xfb, 0x0f, 0x67, 0x8e, 0xed, 0xd9, 0x03, 0x7f, 0xe7, 0xe1, 0x70, 0x6c, 0xe1, 0xa9, 0x67, 0xcc,
	0x06, 0x35, 0xf1, 0xa8, 0xb3, 0xa5, 0x6b, 0x0f, 0x96, 0x9b, 0x0f, 0xc6, 0xf6, 0x70, 0x9f, 0x59,
	0xb3, 0xa7, 0x63, 0x8c, 0x4d, 0x6f, 0xb8, 0xc7, 0x8d, 0xe9, 0x93, 0x30, 0x7e, 0xbc, 0xdc, 0xd8,
	0x73, 0xcc, 0xa9, 0x6b, 0x0e, 0x3d, 0xcb, 0x9e, 0xb2, 0x2d, 0x21, 0x99, 0x6f, 0xd4, 0xde, 0x81,
	0xf4, 0x26, 0x36, 0x77, 0xd4, 0x2a, 0x64, 0xcd, 0xd1, 0xc8, 0xc1, 0xae, 0x5b, 0x4d, 0xdc, 0x4e,
	0xdc, 0x3f, 0x8f, 0xa4, 0xa8, 0xaa, 0x90, 0x1e, 0x99, 0x9e, 0x59, 0x4d, 0x12, 0x75, 0x01, 0xb1,
	0x67, 0xed, 0xef, 0x24, 0xe4, 0x1b, 0xd4, 0xfd, 0xb6, 0x67, 0x7a, 0xbe, 0xab, 0x5e, 0x85, 0x1c,
	0x8f, 0xcb, 0x1a, 0xc9, 0xed, 0x4c, 0xee, 0x8c, 0xd4, 0x07, 0xa0, 0xb8, 0xcc, 0x88, 0xbd, 0xa0,
	0x54, 0xbb, 0xa8, 0x87, 0x36, 0xea, 0xfc, 0x07, 0x09, 0x13, 0x15, 0xc1, 0x25, 0x6b, 0x7a, 0x60,
	0x8e, 0xad, 0x91, 0x11, 0x0a, 0xd5, 0xad, 0xa6, 0x6e, 0xa7, 0xee, 0xe7, 0x6b, 0xb7, 0x22, 0x5b,
	0x3b, 0xdc, 0xb0, 0x3f, 0xb7, 0x43, 0x17, 0xad, 0x05, 0x9d, 0x7b, 0xed, 0x2b, 0x50, 0x17, 0x4d,
	0xd5, 0xbb, 0x50, 0x0a, 0x83, 0x13, 0xc4, 0x5d, 0x0c, 0x69, 0x49, 0xf4, 0x04, 0x96, 0x09, 0x01,
	0xc1, 0xdc, 0xc5, 0x2c, 0x7c, 0x92, 0x97, 0x10, 0xd5, 0xff, 0x43, 0x11, 0xbf, 0xf4, 0xf0, 0x74,
	0x84, 0x47, 0x06, 0xc3, 0x27, 0xc5, 0xf0, 0x29, 0x48, 0x65, 0x8b, 0xe2, 0xf4, 0x31, 0x28, 0x02,
	0xa1, 0x22, 0x9c, 0x6f, 0xf6, 0x9e, 0x3f, 0xef, 0xf4, 0xfb, 0xed, 0x56, 0xe5, 0x9c, 0x9a, 0x87,
	0x6c, 0xa7, 0xfb, 0x69, 0x7d, 0xb3, 0xd3, 0xaa, 0x24, 0xa8, 0xb0, 0xd5, 0xee, 0xb6, 0x3a, 0xdd,
	0x27, 0x95, 0x24, 0x15, 0x5e, 0x74, 0x9f, 0x75, 0x7b, 0x9f, 0x75, 0x2b, 0x29, 0xed, 0xdb, 0x04,
	0x94, 0xb6, 0xcc, 0x5d, 0x6b, 0xba, 0xdb, 0xb4, 0xa7, 0x9e, 0x63, 0x8f, 0x5d, 0x75, 0x03, 0x72,
	0x04, 0x2c, 0xc7, 0x0b, 0x42, 0x7e, 0x7a, 0x0e, 0x65, 0x99, 0x86, 0x84, 0x7b, 0x05, 0x14, 0xe2,
	0x9c, 0x2e, 0x25, 0xc5, 0x52, 0x86, 0xc8, 0x64, 0xe1, 0x0e, 0xe4, 0xc5, 0x2e, 0x12, 0xdb, 0x4b,
	0x16, 0x6b, 0x86, 0xac, 0x02, 0xdf, 0x48, 0x75, 0xea, 0x25, 0xc8, 0x0c, 0x6d, 0x7f, 0xea, 0x55,
	0xd3, 0x74, 0x11, 0x71, 0xa1, 0x71, 0x01, 0xca, 0x84, 0x93, 0x26, 0x03, 0x69, 0x62, 0x3a, 0xfb,
	0xd8, 0xd1, 0xbe, 0x0b, 0x82, 0x42, 0xd8, 0x9d, 0x11, 0x88, 0x31, 0xf1, 0x9b, 0x9d, 0x92, 0xc4,
	0xe7, 0x30, 0x2a, 0x54, 0x24, 0x7e, 0x6f, 0x41, 0x7e, 0xe6, 0xe0, 0x03, 0xcb, 0xf6, 0xdd, 0x20,
	0x2a, 0x04, 0x52, 0xc5, 0x0d, 0x16, 0x02, 0x8b, 0x84, 0x75, 0x0f, 0xca, 0x9e, 0xed, 0x99, 0x63,
	0x83, 0x90, 0xd1, 0xf6, 0x9d, 0x21, 0x76, 0x45, 0x80, 0x25, 0xa6, 0x46, 0x52, 0xab, 0x0d, 0xa1,
	0xb0, 0x6d, 0x3b, 0x5e, 0x00, 0x14, 0xe1, 0xed, 0x3e, 0x7e, 0x45, 0xe9, 0x9c, 0x22, 0x3e, 0xd9,
	0x33, 0x2d, 0x27, 0x71, 0x8d, 0x1d, 0x97, 0x97, 0x33, 0x87, 0xa4, 0x48, 0xf9, 0x30, 0xb4, 0x27,
	0x33, 0xd3, 0xc1, 0xc6, 0x18, 0x4f, 0x77, 0xbd, 0x3d, 0x16, 0x4a, 0x0e, 0x15, 0x85, 0x76, 0x93,
	0x29, 0xb5, 0x6f, 0xa0, 0xda, 0x64, 0x1d, 0xcd, 0x99, 0xe8, 0x0f, 0x26, 0x96, 0x87, 0xf0, 0x97,
	0x3e, 0x76, 0x3d, 0xf5, 0x36, 0x70, 0xd2, 0x63, 0xee, 0x33, 0x5f, 0x53, 0x38, 0x5f, 0x91, 0x54,
	0xab, 0x6f, 0x42, 0xf9, 0xd0, 0xb4, 0x3c, 0x63, 0xc7, 0x76, 0x0c, 0xf2, 0x5e, 0xb2, 0x57, 0x84,
	0x51, 0xa4, 0xea, 0x4f, 0x6c, 0xa7, 0xc9, 0x94, 0x34, 0x4c, 0xcf, 0x9a, 0x60, 0xdb, 0xf7, 0x04,
	0x20, 0x52, 0xd4, 0x7e, 0x4f, 0xc0, 0xd5, 0x25, 0x01, 0x88, 0x32, 0xbc, 0x1f, 0xf4, 0x5a, 0x82,
	0xf5, 0xda, 0x1d, 0x7d, 0xa5, 0x6d, 0xbc, 0xf3, 0x1e, 0x41, 0x89, 0x77, 0x30, 0x97, 0x31, 0x6d,
	0x57, 0x9a, 0x43, 0x21, 0xdc, 0x73, 0xa8, 0x38, 0x98, 0x0b, 0x04, 0xf2, 0xc7, 0x01, 0xbd, 0x15,
	0x48, 0xf6, 0x9e, 0x11, 0x5e, 0xab, 0x50, 0xea, 0x74, 0xfb, 0x6d, 0xd4, 0xad, 0x6f, 0x1a, 0x6d,
	0x84, 0x7a, 0x88, 0xd0, 0xfb, 0x02, 0x14, 0x05, 0xd7, 0x8d, 0x46, 0xbd, 0xdf, 0x7c, 0x5a, 0x49,
	0x6a, 0xaf, 0xa2, 0x30, 0xf2, 0x97, 0x0b, 0x18, 0x37, 0xe0, 0xbc, 0x9c, 0x25, 0xb2, 0x78, 0x39,
	0x31, 0x4c, 0x4e, 0x03, 0xc1, 0xdf, 0x62, 0x08, 0x0a, 0xdf, 0x6b, 0x21, 0x18, 0xb1, 0x3d, 0x15,
	0x04, 0xdf, 0x5d, 0x0b, 0xc1, 0x32, 0xe4, 0xbb, 0x3d, 0x03, 0xb5, 0xb7, 0x7b, 0x2f, 0x50, 0xb3,
	0x5d, 0x49, 0x6b, 0x1b, 0x32, 0x07, 0xba, 0x19, 0x37, 0x7d, 0xc7, 0x21, 0xcf, 0x02, 0x40, 0xed,
	0xe7, 0x04, 0x5c, 0x5b, 0xb6, 0x2a, 0x52, 0xfc, 0x20, 0x96, 0xa2, 0xa6, 0xaf, 0x36, 0x8e, 0xe7,
	0x48, 0xba, 0x75, 0x82, 0x9d, 0xfd, 0x31, 0x36, 0x1c, 0x72, 0xd8, 0xc8, 0x76, 0xe6, 0x2a, 0x44,
	0x34, 0xda, 0xa3, 0xb5, 0xf2, 0x21, 0xc3, 0xb0, 0xdb, 0xeb, 0x93, 0x84, 0xea, 0xad, 0xcf, 0x09,
	0x1b, 0xfe, 0x4c, 0xc0, 0xff, 0x42, 0x31, 0x6c, 0x5a, 0x6e, 0xd0, 0x53, 0x77, 0xa2, 0x0e, 0xe5,
	0xc0, 0x0b, 0xb9, 0x24, 0x67, 0x4f, 0x76, 0x0f, 0x9b, 0x91, 0xa1, 0xa7, 0x50, 0x05, 0x9f, 0xde,
	0xf2, 0x50, 0x4b, 0x45, 0x0f, 0xb5, 0x7b, 0xa0, 0xcc, 0xd8, 0x08, 0x63, 0xc3, 0x24, 0x5f, 0x2b,
	0xeb, 0xd1, 0x31, 0x8b, 0xc4, 0x32, 0x31, 0xcc, 0xba, 0x64, 0xaa, 0x50, 0xcb, 0x0c, 0x2b, 0x67,
	0x51, 0x0f, 0x4f, 0x19, 0x24, 0x57, 0x1b, 0x00, 0x39, 0x1a, 0xa2, 0x41, 0xe6, 0x8c, 0xf6, 0x63,
	0x12, 0xae, 0x2c, 0x24, 0x24, 0xe0, 0x7f, 0x1c, 0x83, 0xff, 0x96, 0xbe, 0xc2, 0x32, 0x8e, 0xfd,
	0x0d, 0x50, 0xc6, 0xd8, 0x3c, 0x08, 0x78, 0x95, 0xd1, 0xe9, 0xc1, 0x8d, 0x84, 0x92, 0x8e, 0x60,
	0x09, 0x03, 0xcf, 0x55, 0x82, 0xb0, 0x2a, 0x55, 0xe9, 0x47, 0xa6, 0xaa, 0x1d, 0x9e, 0xa0, 0x76,
	0xf4, 0xb8, 0xa2, 0xd4, 0xec, 0xf5, 0xfa, 0x95, 0xd4, 0x02, 0x4f, 0xf9, 0x0b, 0x78, 0xeb, 0x6f,
	0xd5, 0x9f, 0xd0, 0x03, 0x2e, 0xa3, 0x56, 0xa0, 0x20, 0x75, 0xdb, 0x3d, 0xd4, 0xaf, 0x28, 0xda,
	0xd7, 0x70, 0x39, 0x84, 0xc1, 0x13, 0xfc, 0xba, 0xab, 0x1f, 0xa9, 0xd5, 0x3f, 0x51, 0xf2, 0x31,
	0xef, 0xa2, 0x54, 0xef, 0xc5, 0x4a, 0x75, 0x53, 0x5f, 0x6e, 0x18, 0xaf, 0x14, 0x39, 0x49, 0xc9,
	0x7d, 0xc3, 0xc7, 0xe2, 0xca, 0xc4, 0x85, 0x95, 0x05, 0xd2, 0x76, 0x4e, 0x1f, 0xf7, 0x8b, 0x50,
	0x96, 0x18, 0xd7, 0x5b, 0x2d, 0xb2, 0xb0, 0x5d, 0xc9, 0x68, 0xdf, 0x07, 0x99, 0x36, 0xe8, 0x35,
	0x33, 0xdc, 0x66, 0xa1, 0xd8, 0x12, 0x11, 0xf2, 0xd0, 0x61, 0xcc, 0x6e, 0xa7, 0x74, 0x18, 0x27,
	0xc5, 0x30, 0xa6, 0x0a, 0x3a, 0x8c, 0xe7, 0xcc, 0x4a, 0xad, 0xdd, 0x44, 0xe9, 0xa3, 0x9a, 0x48,
	0xfb, 0x29, 0x68, 0x9c, 0x50, 0x88, 0xc7, 0x34, 0xce, 0x82, 0x65, 0xbc, 0x1c, 0x37, 0x41, 0x61,
	0x21, 0xcb, 0xc6, 0x21, 0xc7, 0x32, 0x15, 0x91, 0xd0, 0x9e, 0xe5, 0xce, 0xe9, 0xc9, 0xce, 0x61,
	0x19, 0x85, 0x3a, 0x87, 0x5e, 0xc8, 0x45, 0xdd, 0x82, 0x0b, 0x39, 0x2f, 0xdb, 0xbc, 0xa4, 0x53,
	0x7f, 0xc2, 0x18, 0x9a, 0x16, 0x25, 0xed, 0xfa, 0x13, 0xed, 0x87, 0x28, 0x47, 0xd6, 0xe9, 0x86,
	0xb8, 0x61, 0x1c, 0xfe, 0xeb, 0x90, 0x61, 0xaf, 0x67, 0xbe, 0xe6, 0xe8, 0x73, 0xe5, 0x49, 0x0f,
	0xc0, 0x10, 0x97, 0xe9, 0x79, 0xba, 0x36, 0x97, 0x83, 0x8b, 0x45, 0x32, 0x76, 0xb1, 0x38, 0x7d,
	0x2e, 0xff, 0x32, 0xe7, 0xf2, 0x3c, 0xc4, 0xe3, 0xb8, 0x1c, 0xb7, 0x8c, 0x83, 0x19, 0xba, 0x63,
	0x26, 0x97, 0xdf, 0x31, 0xcf, 0x30, 0x9b, 0x6b, 0x01, 0x9b, 0x69, 0x2e, 0x31, 0x36, 0x2f, 0xff,
	0xbc, 0x0c, 0x13, 0x36, 0xd8, 0x74, 0x1c, 0x61, 0x63, 0x86, 0xcb, 0x08, 0x4b, 0x4d, 0xe6, 0x84,
	0x65, 0x08, 0x73, 0xe5, 0x49, 0x09, 0xfb, 0x6b, 0x02, 0xae, 0x73, 0xf7, 0xa1, 0xaf, 0xd0, 0xb5,
	0x68, 0x4b, 0x3f, 0x80, 0x22, 0x5f, 0xaa, 0x92, 0xbc, 0xa5, 0xc8, 0xa7, 0xea, 0xeb, 0xa0, 0xf0,
	0x1f, 0x49, 0xb8, 0xb1, 0x22, 0x68, 0x81, 0xf1, 0x47, 0x31, 0x8c, 0xef, 0xea, 0x47, 0xda, 0xc7,
	0xa1, 0x7e, 0x1b, 0x0a, 0x91, 0xef, 0x7c, 0x79, 0x63, 0x0e, 0x7f, 0xd4, 0x47, 0x2c, 0xce, 0x32,
	0xbd, 0x5b, 0xb0, 0xb1, 0x00, 0x4e, 0x88, 0xe4, 0xeb, 0xfd, 0x23, 0xa1, 0xfd, 0xb5, 0x8c, 0x48,
	0x61, 0xda, 0x7f, 0x18, 0x2b, 0xc9, 0x1b, 0xfa, 0x51, 0xe6, 0xf1, 0x8a, 0xe8, 0x90, 0x0f, 0xf9,
	0x13, 0x2d, 0x10, 0x2d, 0x48, 0xd8, 0x80, 0xde, 0x75, 0xf8, 0x74, 0xe7, 0xd5, 0xf8, 0x4f, 0x53,
	0xbd, 0x71, 0x17, 0x2e, 0xcb, 0xff, 0xb1, 0x74, 0x77, 0x24, 0xfe, 0x08, 0x1b, 0xf8, 0x3b, 0x5b,
	0x89, 0x2f, 0x60, 0xfe, 0x9f, 0xda, 0x40, 0x61, 0xfa, 0x47, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff,
	0xdf, 0x46, 0x7a, 0x84, 0x7e, 0x13, 0x00, 0x00,
}
