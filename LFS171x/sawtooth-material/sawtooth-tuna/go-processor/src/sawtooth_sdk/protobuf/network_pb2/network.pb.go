// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sawtooth_sdk/protobuf/network_pb2/network.proto

/*
Package network_pb2 is a generated protocol buffer package.

It is generated from these files:
	sawtooth_sdk/protobuf/network_pb2/network.proto

It has these top-level messages:
	ConnectMessage
	DisconnectMessage
	PeerRegisterRequest
	PeerUnregisterRequest
	GetPeersRequest
	GetPeersResponse
	PingRequest
	GossipMessage
	NetworkAcknowledgement
	GossipBlockRequest
	GossipBlockResponse
	GossipBatchResponse
	GossipBatchByBatchIdRequest
	GossipBatchByTransactionIdRequest
*/
package network_pb2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NetworkAcknowledgement_Status int32

const (
	NetworkAcknowledgement_OK    NetworkAcknowledgement_Status = 0
	NetworkAcknowledgement_ERROR NetworkAcknowledgement_Status = 1
)

var NetworkAcknowledgement_Status_name = map[int32]string{
	0: "OK",
	1: "ERROR",
}
var NetworkAcknowledgement_Status_value = map[string]int32{
	"OK":    0,
	"ERROR": 1,
}

func (x NetworkAcknowledgement_Status) String() string {
	return proto.EnumName(NetworkAcknowledgement_Status_name, int32(x))
}
func (NetworkAcknowledgement_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{8, 0}
}

// The connect message from a client to the server
type ConnectMessage struct {
	Identity string `protobuf:"bytes,1,opt,name=identity" json:"identity,omitempty"`
	Endpoint string `protobuf:"bytes,2,opt,name=endpoint" json:"endpoint,omitempty"`
}

func (m *ConnectMessage) Reset()                    { *m = ConnectMessage{} }
func (m *ConnectMessage) String() string            { return proto.CompactTextString(m) }
func (*ConnectMessage) ProtoMessage()               {}
func (*ConnectMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ConnectMessage) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *ConnectMessage) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

// The disconnect message from a client to the server
type DisconnectMessage struct {
	Identity string `protobuf:"bytes,1,opt,name=identity" json:"identity,omitempty"`
}

func (m *DisconnectMessage) Reset()                    { *m = DisconnectMessage{} }
func (m *DisconnectMessage) String() string            { return proto.CompactTextString(m) }
func (*DisconnectMessage) ProtoMessage()               {}
func (*DisconnectMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DisconnectMessage) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

// The registration request from a peer to the validator
type PeerRegisterRequest struct {
	Identity string `protobuf:"bytes,1,opt,name=identity" json:"identity,omitempty"`
	Endpoint string `protobuf:"bytes,2,opt,name=endpoint" json:"endpoint,omitempty"`
}

func (m *PeerRegisterRequest) Reset()                    { *m = PeerRegisterRequest{} }
func (m *PeerRegisterRequest) String() string            { return proto.CompactTextString(m) }
func (*PeerRegisterRequest) ProtoMessage()               {}
func (*PeerRegisterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PeerRegisterRequest) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *PeerRegisterRequest) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

// The unregistration request from a peer to the validator
type PeerUnregisterRequest struct {
	Identity string `protobuf:"bytes,1,opt,name=identity" json:"identity,omitempty"`
}

func (m *PeerUnregisterRequest) Reset()                    { *m = PeerUnregisterRequest{} }
func (m *PeerUnregisterRequest) String() string            { return proto.CompactTextString(m) }
func (*PeerUnregisterRequest) ProtoMessage()               {}
func (*PeerUnregisterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PeerUnregisterRequest) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

type GetPeersRequest struct {
	Identity string `protobuf:"bytes,1,opt,name=identity" json:"identity,omitempty"`
}

func (m *GetPeersRequest) Reset()                    { *m = GetPeersRequest{} }
func (m *GetPeersRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPeersRequest) ProtoMessage()               {}
func (*GetPeersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetPeersRequest) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

type GetPeersResponse struct {
	PeerEndpoints []string `protobuf:"bytes,1,rep,name=peer_endpoints,json=peerEndpoints" json:"peer_endpoints,omitempty"`
}

func (m *GetPeersResponse) Reset()                    { *m = GetPeersResponse{} }
func (m *GetPeersResponse) String() string            { return proto.CompactTextString(m) }
func (*GetPeersResponse) ProtoMessage()               {}
func (*GetPeersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetPeersResponse) GetPeerEndpoints() []string {
	if m != nil {
		return m.PeerEndpoints
	}
	return nil
}

type PingRequest struct {
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type GossipMessage struct {
	Content     []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	ContentType string `protobuf:"bytes,2,opt,name=content_type,json=contentType" json:"content_type,omitempty"`
}

func (m *GossipMessage) Reset()                    { *m = GossipMessage{} }
func (m *GossipMessage) String() string            { return proto.CompactTextString(m) }
func (*GossipMessage) ProtoMessage()               {}
func (*GossipMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GossipMessage) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *GossipMessage) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

// A response sent from the validator to the peer acknowledging message
// receipt
type NetworkAcknowledgement struct {
	Status NetworkAcknowledgement_Status `protobuf:"varint,1,opt,name=status,enum=NetworkAcknowledgement_Status" json:"status,omitempty"`
}

func (m *NetworkAcknowledgement) Reset()                    { *m = NetworkAcknowledgement{} }
func (m *NetworkAcknowledgement) String() string            { return proto.CompactTextString(m) }
func (*NetworkAcknowledgement) ProtoMessage()               {}
func (*NetworkAcknowledgement) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *NetworkAcknowledgement) GetStatus() NetworkAcknowledgement_Status {
	if m != nil {
		return m.Status
	}
	return NetworkAcknowledgement_OK
}

type GossipBlockRequest struct {
	// The id of the block that is being requested
	BlockId string `protobuf:"bytes,1,opt,name=block_id,json=blockId" json:"block_id,omitempty"`
	// The identity of the validator that is requesting the block
	NodeId []byte `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// A random string that provides uniqueness for requests with
	// otherwise identical fields.
	Nonce string `protobuf:"bytes,3,opt,name=nonce" json:"nonce,omitempty"`
}

func (m *GossipBlockRequest) Reset()                    { *m = GossipBlockRequest{} }
func (m *GossipBlockRequest) String() string            { return proto.CompactTextString(m) }
func (*GossipBlockRequest) ProtoMessage()               {}
func (*GossipBlockRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *GossipBlockRequest) GetBlockId() string {
	if m != nil {
		return m.BlockId
	}
	return ""
}

func (m *GossipBlockRequest) GetNodeId() []byte {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *GossipBlockRequest) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

type GossipBlockResponse struct {
	// The block
	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	// The identity of the validator that requested the block
	NodeId []byte `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (m *GossipBlockResponse) Reset()                    { *m = GossipBlockResponse{} }
func (m *GossipBlockResponse) String() string            { return proto.CompactTextString(m) }
func (*GossipBlockResponse) ProtoMessage()               {}
func (*GossipBlockResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *GossipBlockResponse) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *GossipBlockResponse) GetNodeId() []byte {
	if m != nil {
		return m.NodeId
	}
	return nil
}

type GossipBatchResponse struct {
	// The batch
	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	// The identity of the validator that requested the batch
	NodeId []byte `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (m *GossipBatchResponse) Reset()                    { *m = GossipBatchResponse{} }
func (m *GossipBatchResponse) String() string            { return proto.CompactTextString(m) }
func (*GossipBatchResponse) ProtoMessage()               {}
func (*GossipBatchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *GossipBatchResponse) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *GossipBatchResponse) GetNodeId() []byte {
	if m != nil {
		return m.NodeId
	}
	return nil
}

type GossipBatchByBatchIdRequest struct {
	// The id of the batch that is being requested
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The identity of the validator that is requesting the batch
	NodeId []byte `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// A random string that provides uniqueness for requests with
	// otherwise identical fields.
	Nonce string `protobuf:"bytes,3,opt,name=nonce" json:"nonce,omitempty"`
}

func (m *GossipBatchByBatchIdRequest) Reset()                    { *m = GossipBatchByBatchIdRequest{} }
func (m *GossipBatchByBatchIdRequest) String() string            { return proto.CompactTextString(m) }
func (*GossipBatchByBatchIdRequest) ProtoMessage()               {}
func (*GossipBatchByBatchIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *GossipBatchByBatchIdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GossipBatchByBatchIdRequest) GetNodeId() []byte {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *GossipBatchByBatchIdRequest) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

type GossipBatchByTransactionIdRequest struct {
	// The id's of the transaction that are in the batches requested
	Ids []string `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
	// The identity of the validator that is requesting the batches
	NodeId []byte `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// A random string that provides uniqueness for requests with
	// otherwise identical fields.
	Nonce string `protobuf:"bytes,3,opt,name=nonce" json:"nonce,omitempty"`
}

func (m *GossipBatchByTransactionIdRequest) Reset()         { *m = GossipBatchByTransactionIdRequest{} }
func (m *GossipBatchByTransactionIdRequest) String() string { return proto.CompactTextString(m) }
func (*GossipBatchByTransactionIdRequest) ProtoMessage()    {}
func (*GossipBatchByTransactionIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{13}
}

func (m *GossipBatchByTransactionIdRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *GossipBatchByTransactionIdRequest) GetNodeId() []byte {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *GossipBatchByTransactionIdRequest) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func init() {
	proto.RegisterType((*ConnectMessage)(nil), "ConnectMessage")
	proto.RegisterType((*DisconnectMessage)(nil), "DisconnectMessage")
	proto.RegisterType((*PeerRegisterRequest)(nil), "PeerRegisterRequest")
	proto.RegisterType((*PeerUnregisterRequest)(nil), "PeerUnregisterRequest")
	proto.RegisterType((*GetPeersRequest)(nil), "GetPeersRequest")
	proto.RegisterType((*GetPeersResponse)(nil), "GetPeersResponse")
	proto.RegisterType((*PingRequest)(nil), "PingRequest")
	proto.RegisterType((*GossipMessage)(nil), "GossipMessage")
	proto.RegisterType((*NetworkAcknowledgement)(nil), "NetworkAcknowledgement")
	proto.RegisterType((*GossipBlockRequest)(nil), "GossipBlockRequest")
	proto.RegisterType((*GossipBlockResponse)(nil), "GossipBlockResponse")
	proto.RegisterType((*GossipBatchResponse)(nil), "GossipBatchResponse")
	proto.RegisterType((*GossipBatchByBatchIdRequest)(nil), "GossipBatchByBatchIdRequest")
	proto.RegisterType((*GossipBatchByTransactionIdRequest)(nil), "GossipBatchByTransactionIdRequest")
	proto.RegisterEnum("NetworkAcknowledgement_Status", NetworkAcknowledgement_Status_name, NetworkAcknowledgement_Status_value)
}

func init() { proto.RegisterFile("sawtooth_sdk/protobuf/network_pb2/network.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 463 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x54, 0xdf, 0x6b, 0x13, 0x41,
	0x10, 0x36, 0x09, 0xbd, 0xb4, 0x93, 0x26, 0xc6, 0xab, 0xd5, 0x68, 0x41, 0xec, 0x82, 0xe2, 0x8b,
	0x17, 0x68, 0x41, 0xf0, 0xd1, 0x68, 0xa9, 0x45, 0x6b, 0xc3, 0x59, 0x5f, 0x44, 0x3c, 0x2e, 0xb7,
	0x63, 0xba, 0x5c, 0xbb, 0x7b, 0xde, 0x4e, 0x08, 0xf9, 0xef, 0xdd, 0xdd, 0xbb, 0x6d, 0x53, 0xb0,
	0x90, 0xe8, 0xd3, 0xce, 0x37, 0x3f, 0xbe, 0xd9, 0xf9, 0x76, 0x19, 0x18, 0xea, 0x74, 0x4e, 0x4a,
	0xd1, 0x45, 0xa2, 0x79, 0x3e, 0x2c, 0x4a, 0x45, 0x6a, 0x32, 0xfb, 0x35, 0x94, 0x48, 0x73, 0x55,
	0xe6, 0x49, 0x31, 0x39, 0xf0, 0x76, 0xe4, 0x82, 0xec, 0x23, 0xf4, 0xde, 0x2b, 0x29, 0x31, 0xa3,
	0x53, 0xd4, 0x3a, 0x9d, 0x62, 0xf8, 0x14, 0x36, 0x05, 0x47, 0x49, 0x82, 0x16, 0x83, 0xc6, 0xf3,
	0xc6, 0xab, 0xad, 0xf8, 0x1a, 0xdb, 0x18, 0x4a, 0x5e, 0x28, 0x21, 0x69, 0xd0, 0xac, 0x62, 0x1e,
	0xb3, 0x21, 0x3c, 0xf8, 0x20, 0x74, 0xb6, 0x32, 0x19, 0x3b, 0x85, 0x9d, 0x31, 0x62, 0x19, 0xe3,
	0x54, 0x68, 0xb2, 0xe7, 0xef, 0x19, 0x6a, 0xfa, 0xe7, 0xfe, 0x87, 0xb0, 0x6b, 0xe9, 0xbe, 0xc9,
	0x72, 0x75, 0x42, 0xf6, 0x1a, 0xee, 0x1f, 0x23, 0xd9, 0x3a, 0xbd, 0x4a, 0xfa, 0x5b, 0xe8, 0xdf,
	0xa4, 0xeb, 0x42, 0x49, 0x8d, 0xe1, 0x0b, 0xe8, 0x15, 0xc6, 0x91, 0xf8, 0x8b, 0x68, 0x53, 0xd5,
	0x32, 0x55, 0x5d, 0xeb, 0x3d, 0xf2, 0x4e, 0xd6, 0x85, 0xce, 0x58, 0xc8, 0x69, 0xdd, 0x85, 0x7d,
	0x86, 0xee, 0xb1, 0xd2, 0x5a, 0x14, 0x5e, 0xa9, 0x01, 0xb4, 0x8d, 0x76, 0x64, 0x1a, 0xb9, 0xae,
	0xdb, 0xb1, 0x87, 0xe1, 0x3e, 0x6c, 0xd7, 0x66, 0x42, 0x8b, 0x02, 0xeb, 0xc1, 0x3b, 0xb5, 0xef,
	0xdc, 0xb8, 0xd8, 0x15, 0x3c, 0xfa, 0x52, 0x3d, 0xeb, 0xbb, 0x2c, 0x97, 0x6a, 0x7e, 0x89, 0x7c,
	0x8a, 0x57, 0xb6, 0xf8, 0x0d, 0x04, 0x9a, 0x52, 0x9a, 0x69, 0xc7, 0xda, 0x3b, 0x78, 0x16, 0xfd,
	0x3d, 0x31, 0xfa, 0xea, 0xb2, 0xe2, 0x3a, 0x9b, 0xed, 0x41, 0x50, 0x79, 0xc2, 0x00, 0x9a, 0x67,
	0x9f, 0xfa, 0xf7, 0xc2, 0x2d, 0xd8, 0x38, 0x8a, 0xe3, 0xb3, 0xb8, 0xdf, 0x60, 0x3f, 0x21, 0xac,
	0x2e, 0x3f, 0xba, 0x54, 0x59, 0xee, 0x85, 0x7b, 0x02, 0x9b, 0x13, 0x8b, 0x13, 0xc1, 0x6b, 0xe1,
	0xda, 0x0e, 0x9f, 0xf0, 0xf0, 0x31, 0xb4, 0xa5, 0xe2, 0x68, 0x23, 0x4d, 0x37, 0x5c, 0x60, 0xa1,
	0x09, 0x3c, 0x84, 0x0d, 0xa9, 0x64, 0x86, 0x83, 0x96, 0x2b, 0xa8, 0x80, 0xf9, 0x94, 0x3b, 0xb7,
	0xf8, 0x6b, 0xa5, 0xef, 0x96, 0xe8, 0x2e, 0xfe, 0x25, 0xa6, 0x94, 0xb2, 0x8b, 0xff, 0x61, 0xfa,
	0x01, 0x7b, 0x4b, 0x4c, 0xa3, 0x85, 0x3b, 0x4e, 0xb8, 0x1f, 0xbe, 0x07, 0xcd, 0xeb, 0xb1, 0x8d,
	0xb5, 0xee, 0xc4, 0x1c, 0xf6, 0x6f, 0xb1, 0x9f, 0x97, 0xa9, 0xd4, 0x69, 0x46, 0x42, 0xc9, 0x9b,
	0x1e, 0x7d, 0x68, 0x09, 0xee, 0xbf, 0x97, 0x35, 0xd7, 0xec, 0x32, 0x7a, 0x09, 0xbb, 0x7e, 0x3f,
	0x44, 0x66, 0x3f, 0x44, 0x7e, 0x3f, 0x8c, 0x1b, 0xdf, 0x3b, 0x4b, 0x2b, 0x62, 0x12, 0xb8, 0xc0,
	0xe1, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x93, 0xaf, 0x43, 0x31, 0x4e, 0x04, 0x00, 0x00,
}
