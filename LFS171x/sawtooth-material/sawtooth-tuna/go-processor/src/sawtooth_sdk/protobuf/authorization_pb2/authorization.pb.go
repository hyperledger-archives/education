// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sawtooth_sdk/protobuf/authorization_pb2/authorization.proto

/*
Package authorization_pb2 is a generated protocol buffer package.

It is generated from these files:
	sawtooth_sdk/protobuf/authorization_pb2/authorization.proto

It has these top-level messages:
	ConnectionRequest
	ConnectionResponse
	AuthorizationTrustRequest
	AuthorizationTrustResponse
	AuthorizationViolation
	AuthorizationChallengeRequest
	AuthorizationChallengeResponse
	AuthorizationChallengeSubmit
	AuthorizationChallengeResult
*/
package authorization_pb2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RoleType int32

const (
	// A shorthand request for asking for all allowed roles.
	RoleType_ALL RoleType = 0
	// Role defining validator to validator communication
	RoleType_NETWORK RoleType = 1
)

var RoleType_name = map[int32]string{
	0: "ALL",
	1: "NETWORK",
}
var RoleType_value = map[string]int32{
	"ALL":     0,
	"NETWORK": 1,
}

func (x RoleType) String() string {
	return proto.EnumName(RoleType_name, int32(x))
}
func (RoleType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Whether the connection can participate in authorization
type ConnectionResponse_Status int32

const (
	ConnectionResponse_OK    ConnectionResponse_Status = 0
	ConnectionResponse_ERROR ConnectionResponse_Status = 1
)

var ConnectionResponse_Status_name = map[int32]string{
	0: "OK",
	1: "ERROR",
}
var ConnectionResponse_Status_value = map[string]int32{
	"OK":    0,
	"ERROR": 1,
}

func (x ConnectionResponse_Status) String() string {
	return proto.EnumName(ConnectionResponse_Status_name, int32(x))
}
func (ConnectionResponse_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

// Authorization Type required for the authorization procedure
type ConnectionResponse_AuthorizationType int32

const (
	ConnectionResponse_TRUST     ConnectionResponse_AuthorizationType = 0
	ConnectionResponse_CHALLENGE ConnectionResponse_AuthorizationType = 1
)

var ConnectionResponse_AuthorizationType_name = map[int32]string{
	0: "TRUST",
	1: "CHALLENGE",
}
var ConnectionResponse_AuthorizationType_value = map[string]int32{
	"TRUST":     0,
	"CHALLENGE": 1,
}

func (x ConnectionResponse_AuthorizationType) String() string {
	return proto.EnumName(ConnectionResponse_AuthorizationType_name, int32(x))
}
func (ConnectionResponse_AuthorizationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 1}
}

type ConnectionRequest struct {
	// This is the first message that must be sent to start off authorization.
	// The endpoint of the connection.
	Endpoint string `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
}

func (m *ConnectionRequest) Reset()                    { *m = ConnectionRequest{} }
func (m *ConnectionRequest) String() string            { return proto.CompactTextString(m) }
func (*ConnectionRequest) ProtoMessage()               {}
func (*ConnectionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ConnectionRequest) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

type ConnectionResponse struct {
	Roles  []*ConnectionResponse_RoleEntry `protobuf:"bytes,1,rep,name=roles" json:"roles,omitempty"`
	Status ConnectionResponse_Status       `protobuf:"varint,2,opt,name=status,enum=ConnectionResponse_Status" json:"status,omitempty"`
}

func (m *ConnectionResponse) Reset()                    { *m = ConnectionResponse{} }
func (m *ConnectionResponse) String() string            { return proto.CompactTextString(m) }
func (*ConnectionResponse) ProtoMessage()               {}
func (*ConnectionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ConnectionResponse) GetRoles() []*ConnectionResponse_RoleEntry {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *ConnectionResponse) GetStatus() ConnectionResponse_Status {
	if m != nil {
		return m.Status
	}
	return ConnectionResponse_OK
}

type ConnectionResponse_RoleEntry struct {
	// The role type for this role entry
	Role RoleType `protobuf:"varint,1,opt,name=role,enum=RoleType" json:"role,omitempty"`
	// The Authorization Type required for the above role
	AuthType ConnectionResponse_AuthorizationType `protobuf:"varint,2,opt,name=auth_type,json=authType,enum=ConnectionResponse_AuthorizationType" json:"auth_type,omitempty"`
}

func (m *ConnectionResponse_RoleEntry) Reset()                    { *m = ConnectionResponse_RoleEntry{} }
func (m *ConnectionResponse_RoleEntry) String() string            { return proto.CompactTextString(m) }
func (*ConnectionResponse_RoleEntry) ProtoMessage()               {}
func (*ConnectionResponse_RoleEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *ConnectionResponse_RoleEntry) GetRole() RoleType {
	if m != nil {
		return m.Role
	}
	return RoleType_ALL
}

func (m *ConnectionResponse_RoleEntry) GetAuthType() ConnectionResponse_AuthorizationType {
	if m != nil {
		return m.AuthType
	}
	return ConnectionResponse_TRUST
}

type AuthorizationTrustRequest struct {
	// A set of requested RoleTypes
	Roles     []RoleType `protobuf:"varint,1,rep,packed,name=roles,enum=RoleType" json:"roles,omitempty"`
	PublicKey string     `protobuf:"bytes,2,opt,name=public_key,json=publicKey" json:"public_key,omitempty"`
}

func (m *AuthorizationTrustRequest) Reset()                    { *m = AuthorizationTrustRequest{} }
func (m *AuthorizationTrustRequest) String() string            { return proto.CompactTextString(m) }
func (*AuthorizationTrustRequest) ProtoMessage()               {}
func (*AuthorizationTrustRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AuthorizationTrustRequest) GetRoles() []RoleType {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *AuthorizationTrustRequest) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

type AuthorizationTrustResponse struct {
	// The actual set the requester has access to
	Roles []RoleType `protobuf:"varint,1,rep,packed,name=roles,enum=RoleType" json:"roles,omitempty"`
}

func (m *AuthorizationTrustResponse) Reset()                    { *m = AuthorizationTrustResponse{} }
func (m *AuthorizationTrustResponse) String() string            { return proto.CompactTextString(m) }
func (*AuthorizationTrustResponse) ProtoMessage()               {}
func (*AuthorizationTrustResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AuthorizationTrustResponse) GetRoles() []RoleType {
	if m != nil {
		return m.Roles
	}
	return nil
}

type AuthorizationViolation struct {
	// The Role the requester did not have access to
	Violation RoleType `protobuf:"varint,1,opt,name=violation,enum=RoleType" json:"violation,omitempty"`
}

func (m *AuthorizationViolation) Reset()                    { *m = AuthorizationViolation{} }
func (m *AuthorizationViolation) String() string            { return proto.CompactTextString(m) }
func (*AuthorizationViolation) ProtoMessage()               {}
func (*AuthorizationViolation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AuthorizationViolation) GetViolation() RoleType {
	if m != nil {
		return m.Violation
	}
	return RoleType_ALL
}

type AuthorizationChallengeRequest struct {
}

func (m *AuthorizationChallengeRequest) Reset()                    { *m = AuthorizationChallengeRequest{} }
func (m *AuthorizationChallengeRequest) String() string            { return proto.CompactTextString(m) }
func (*AuthorizationChallengeRequest) ProtoMessage()               {}
func (*AuthorizationChallengeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type AuthorizationChallengeResponse struct {
	// Random payload that the connecting node must sign
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *AuthorizationChallengeResponse) Reset()                    { *m = AuthorizationChallengeResponse{} }
func (m *AuthorizationChallengeResponse) String() string            { return proto.CompactTextString(m) }
func (*AuthorizationChallengeResponse) ProtoMessage()               {}
func (*AuthorizationChallengeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *AuthorizationChallengeResponse) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type AuthorizationChallengeSubmit struct {
	// public key of node
	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey" json:"public_key,omitempty"`
	// payload bytes that was signed to make the signature
	Payload []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	// signature derived from signing the challenge payload
	Signature string `protobuf:"bytes,3,opt,name=signature" json:"signature,omitempty"`
	// A set of requested Roles
	Roles []RoleType `protobuf:"varint,4,rep,packed,name=roles,enum=RoleType" json:"roles,omitempty"`
}

func (m *AuthorizationChallengeSubmit) Reset()                    { *m = AuthorizationChallengeSubmit{} }
func (m *AuthorizationChallengeSubmit) String() string            { return proto.CompactTextString(m) }
func (*AuthorizationChallengeSubmit) ProtoMessage()               {}
func (*AuthorizationChallengeSubmit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *AuthorizationChallengeSubmit) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *AuthorizationChallengeSubmit) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *AuthorizationChallengeSubmit) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *AuthorizationChallengeSubmit) GetRoles() []RoleType {
	if m != nil {
		return m.Roles
	}
	return nil
}

type AuthorizationChallengeResult struct {
	// The approved roles for that connection
	Roles []RoleType `protobuf:"varint,1,rep,packed,name=roles,enum=RoleType" json:"roles,omitempty"`
}

func (m *AuthorizationChallengeResult) Reset()                    { *m = AuthorizationChallengeResult{} }
func (m *AuthorizationChallengeResult) String() string            { return proto.CompactTextString(m) }
func (*AuthorizationChallengeResult) ProtoMessage()               {}
func (*AuthorizationChallengeResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *AuthorizationChallengeResult) GetRoles() []RoleType {
	if m != nil {
		return m.Roles
	}
	return nil
}

func init() {
	proto.RegisterType((*ConnectionRequest)(nil), "ConnectionRequest")
	proto.RegisterType((*ConnectionResponse)(nil), "ConnectionResponse")
	proto.RegisterType((*ConnectionResponse_RoleEntry)(nil), "ConnectionResponse.RoleEntry")
	proto.RegisterType((*AuthorizationTrustRequest)(nil), "AuthorizationTrustRequest")
	proto.RegisterType((*AuthorizationTrustResponse)(nil), "AuthorizationTrustResponse")
	proto.RegisterType((*AuthorizationViolation)(nil), "AuthorizationViolation")
	proto.RegisterType((*AuthorizationChallengeRequest)(nil), "AuthorizationChallengeRequest")
	proto.RegisterType((*AuthorizationChallengeResponse)(nil), "AuthorizationChallengeResponse")
	proto.RegisterType((*AuthorizationChallengeSubmit)(nil), "AuthorizationChallengeSubmit")
	proto.RegisterType((*AuthorizationChallengeResult)(nil), "AuthorizationChallengeResult")
	proto.RegisterEnum("RoleType", RoleType_name, RoleType_value)
	proto.RegisterEnum("ConnectionResponse_Status", ConnectionResponse_Status_name, ConnectionResponse_Status_value)
	proto.RegisterEnum("ConnectionResponse_AuthorizationType", ConnectionResponse_AuthorizationType_name, ConnectionResponse_AuthorizationType_value)
}

func init() {
	proto.RegisterFile("sawtooth_sdk/protobuf/authorization_pb2/authorization.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 489 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x53, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0x25, 0xed, 0xd6, 0xd6, 0x77, 0x30, 0xb5, 0x96, 0x40, 0xa5, 0xac, 0x6c, 0xb2, 0x84, 0x98,
	0x10, 0xa4, 0x52, 0xf6, 0x06, 0x42, 0xa8, 0xab, 0x22, 0x90, 0x3a, 0xad, 0xc8, 0x2d, 0x20, 0xc1,
	0x43, 0x95, 0xac, 0x66, 0x8d, 0x16, 0xec, 0x10, 0x3b, 0xa0, 0xf0, 0x21, 0xfc, 0x0b, 0x7f, 0x87,
	0xe3, 0x26, 0x5d, 0xb3, 0xb6, 0xea, 0x5b, 0x7c, 0x7c, 0xce, 0xb9, 0xf7, 0x1e, 0xe7, 0xc2, 0x1b,
	0xe9, 0xfd, 0x56, 0x42, 0xa8, 0xf9, 0x54, 0xce, 0x6e, 0x7a, 0x51, 0x2c, 0x94, 0xf0, 0x93, 0xef,
	0x3d, 0x2f, 0x51, 0x73, 0x11, 0x07, 0x7f, 0x3c, 0x15, 0x08, 0x3e, 0x8d, 0x7c, 0xa7, 0x8c, 0xd8,
	0x86, 0x48, 0x7a, 0xd0, 0x1a, 0x08, 0xce, 0xd9, 0x55, 0x86, 0x51, 0xf6, 0x33, 0x61, 0x52, 0xe1,
	0x0e, 0x34, 0x18, 0x9f, 0x45, 0x22, 0xe0, 0xaa, 0x6d, 0x9d, 0x58, 0xa7, 0x88, 0x2e, 0xcf, 0xe4,
	0x5f, 0x05, 0xf0, 0xaa, 0x42, 0x46, 0x82, 0x4b, 0x86, 0xcf, 0x60, 0x3f, 0x16, 0x21, 0x93, 0x9a,
	0x5f, 0x3d, 0x3d, 0x70, 0xba, 0xf6, 0x3a, 0xc7, 0xa6, 0x9a, 0xe0, 0x72, 0x15, 0xa7, 0x74, 0xc1,
	0xc5, 0x0e, 0xd4, 0xa4, 0xf2, 0x54, 0x22, 0xdb, 0x15, 0x5d, 0xe5, 0xd0, 0xe9, 0x6c, 0x52, 0x8d,
	0x0d, 0x83, 0xe6, 0xcc, 0x0e, 0x07, 0xb4, 0xf4, 0xc1, 0x5d, 0xd8, 0xcb, 0x9c, 0x4c, 0x93, 0x87,
	0x0e, 0x32, 0x15, 0x26, 0x69, 0xc4, 0xa8, 0x81, 0xf1, 0x39, 0xa0, 0x6c, 0xe6, 0xa9, 0xd2, 0x50,
	0x5e, 0xe2, 0xd9, 0xa6, 0x12, 0xfd, 0xd5, 0x60, 0x8c, 0xbe, 0x91, 0xe9, 0xb2, 0x2f, 0xf2, 0x04,
	0x6a, 0x8b, 0x0e, 0x70, 0x0d, 0x2a, 0xa3, 0x61, 0xf3, 0x1e, 0x46, 0xb0, 0xef, 0x52, 0x3a, 0xa2,
	0x4d, 0x8b, 0xbc, 0x82, 0xd6, 0x9a, 0x36, 0xbb, 0x9f, 0xd0, 0x4f, 0xe3, 0x89, 0xa6, 0x3e, 0x00,
	0x34, 0xf8, 0xd0, 0xbf, 0xb8, 0x70, 0x2f, 0xdf, 0xbb, 0x9a, 0xfe, 0x0d, 0x1e, 0x97, 0xe9, 0x71,
	0x22, 0x55, 0x11, 0xfa, 0xf1, 0x6a, 0x82, 0xa5, 0x61, 0xf2, 0xb4, 0xba, 0x00, 0x51, 0xe2, 0x87,
	0xc1, 0xd5, 0xf4, 0x86, 0xa5, 0x66, 0x1c, 0x44, 0xd1, 0x02, 0x19, 0xb2, 0x94, 0xbc, 0x85, 0xce,
	0x26, 0xf3, 0xfc, 0x7d, 0x76, 0xb9, 0x93, 0x3e, 0x3c, 0x2a, 0xc9, 0x3f, 0x07, 0x22, 0x34, 0x1f,
	0xf8, 0x39, 0xa0, 0x5f, 0xc5, 0x61, 0x3d, 0xe9, 0xdb, 0x3b, 0x72, 0x0c, 0xdd, 0x92, 0xc5, 0x60,
	0xee, 0x85, 0x21, 0xe3, 0xd7, 0x2c, 0x1f, 0x91, 0xbc, 0x86, 0xa7, 0xdb, 0x08, 0x79, 0x9b, 0x6d,
	0xa8, 0x47, 0x5e, 0x1a, 0x0a, 0x6f, 0x66, 0x2a, 0xdd, 0xa7, 0xc5, 0x91, 0xfc, 0xb5, 0xe0, 0x68,
	0xb3, 0x78, 0x9c, 0xf8, 0x3f, 0x02, 0x75, 0x27, 0x1e, 0xeb, 0x4e, 0x3c, 0xab, 0xce, 0x95, 0x92,
	0x33, 0x3e, 0x02, 0x24, 0x83, 0x6b, 0xae, 0xdf, 0x38, 0x66, 0xed, 0xea, 0x42, 0xb7, 0x04, 0x6e,
	0x83, 0xdb, 0xdb, 0x12, 0xdc, 0xbb, 0x6d, 0x7d, 0xe9, 0xa1, 0x92, 0x70, 0xf7, 0xbb, 0xbe, 0x38,
	0x81, 0x46, 0x01, 0xe1, 0x3a, 0x54, 0xf5, 0xef, 0xa2, 0xff, 0x9c, 0x03, 0xa8, 0x5f, 0xba, 0x93,
	0x2f, 0x23, 0x3a, 0x6c, 0x5a, 0xe7, 0x2f, 0xe1, 0x61, 0xb1, 0xe3, 0xb6, 0xde, 0x71, 0xbb, 0xd8,
	0xf1, 0x8f, 0xd6, 0xd7, 0xd6, 0xda, 0x9a, 0xfb, 0x35, 0x73, 0x7d, 0xf6, 0x3f, 0x00, 0x00, 0xff,
	0xff, 0x84, 0x7c, 0xe7, 0x87, 0x18, 0x04, 0x00, 0x00,
}
