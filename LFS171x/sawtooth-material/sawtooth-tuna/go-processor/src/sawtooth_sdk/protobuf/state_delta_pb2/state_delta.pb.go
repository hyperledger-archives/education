// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sawtooth_sdk/protobuf/state_delta_pb2/state_delta.proto

/*
Package state_delta_pb2 is a generated protocol buffer package.

It is generated from these files:
	sawtooth_sdk/protobuf/state_delta_pb2/state_delta.proto

It has these top-level messages:
	StateChange
	StateDeltaSet
	StateDeltaEvent
	StateDeltaSubscribeRequest
	StateDeltaSubscribeResponse
	StateDeltaUnsubscribeRequest
	StateDeltaUnsubscribeResponse
	StateDeltaGetEventsRequest
	StateDeltaGetEventsResponse
*/
package state_delta_pb2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StateChange_Type int32

const (
	StateChange_SET    StateChange_Type = 0
	StateChange_DELETE StateChange_Type = 1
)

var StateChange_Type_name = map[int32]string{
	0: "SET",
	1: "DELETE",
}
var StateChange_Type_value = map[string]int32{
	"SET":    0,
	"DELETE": 1,
}

func (x StateChange_Type) String() string {
	return proto.EnumName(StateChange_Type_name, int32(x))
}
func (StateChange_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type StateDeltaSubscribeResponse_Status int32

const (
	// returned on successful registration
	StateDeltaSubscribeResponse_OK StateDeltaSubscribeResponse_Status = 0
	// returned on a failed registration, due to
	// an internal validator error
	StateDeltaSubscribeResponse_INTERNAL_ERROR StateDeltaSubscribeResponse_Status = 1
	// returned on a failed registration, due to all
	// last_known_block_ids being unknown.  This could imply
	// that a fork had occurred and been resolved since last
	// unregistration.
	StateDeltaSubscribeResponse_UNKNOWN_BLOCK StateDeltaSubscribeResponse_Status = 2
)

var StateDeltaSubscribeResponse_Status_name = map[int32]string{
	0: "OK",
	1: "INTERNAL_ERROR",
	2: "UNKNOWN_BLOCK",
}
var StateDeltaSubscribeResponse_Status_value = map[string]int32{
	"OK":             0,
	"INTERNAL_ERROR": 1,
	"UNKNOWN_BLOCK":  2,
}

func (x StateDeltaSubscribeResponse_Status) String() string {
	return proto.EnumName(StateDeltaSubscribeResponse_Status_name, int32(x))
}
func (StateDeltaSubscribeResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4, 0}
}

type StateDeltaUnsubscribeResponse_Status int32

const (
	// returned on successful registration
	StateDeltaUnsubscribeResponse_OK StateDeltaUnsubscribeResponse_Status = 0
	// returned on a failed registration, due to
	// an internal validator error
	StateDeltaUnsubscribeResponse_INTERNAL_ERROR StateDeltaUnsubscribeResponse_Status = 1
)

var StateDeltaUnsubscribeResponse_Status_name = map[int32]string{
	0: "OK",
	1: "INTERNAL_ERROR",
}
var StateDeltaUnsubscribeResponse_Status_value = map[string]int32{
	"OK":             0,
	"INTERNAL_ERROR": 1,
}

func (x StateDeltaUnsubscribeResponse_Status) String() string {
	return proto.EnumName(StateDeltaUnsubscribeResponse_Status_name, int32(x))
}
func (StateDeltaUnsubscribeResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{6, 0}
}

type StateDeltaGetEventsResponse_Status int32

const (
	// returned on a successful request
	StateDeltaGetEventsResponse_OK StateDeltaGetEventsResponse_Status = 0
	// returned on a failed request, due to an internal validator error.
	StateDeltaGetEventsResponse_INTERNAL_ERROR StateDeltaGetEventsResponse_Status = 1
	// return on a bad request, where no block id was provided in the
	// request.
	StateDeltaGetEventsResponse_NO_VALID_BLOCKS_SPECIFIED StateDeltaGetEventsResponse_Status = 2
)

var StateDeltaGetEventsResponse_Status_name = map[int32]string{
	0: "OK",
	1: "INTERNAL_ERROR",
	2: "NO_VALID_BLOCKS_SPECIFIED",
}
var StateDeltaGetEventsResponse_Status_value = map[string]int32{
	"OK":                        0,
	"INTERNAL_ERROR":            1,
	"NO_VALID_BLOCKS_SPECIFIED": 2,
}

func (x StateDeltaGetEventsResponse_Status) String() string {
	return proto.EnumName(StateDeltaGetEventsResponse_Status_name, int32(x))
}
func (StateDeltaGetEventsResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{8, 0}
}

// A state change is an entry in a given delta set. StateChange objects
// have the type of SET, which is either an insert or update, or
// DELETE.  Items marked as a DELETE will have no byte value.
type StateChange struct {
	Address string           `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Value   []byte           `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Type    StateChange_Type `protobuf:"varint,3,opt,name=type,enum=StateChange_Type" json:"type,omitempty"`
}

func (m *StateChange) Reset()                    { *m = StateChange{} }
func (m *StateChange) String() string            { return proto.CompactTextString(m) }
func (*StateChange) ProtoMessage()               {}
func (*StateChange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *StateChange) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *StateChange) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *StateChange) GetType() StateChange_Type {
	if m != nil {
		return m.Type
	}
	return StateChange_SET
}

// A collection of state changes.
type StateDeltaSet struct {
	StateChanges []*StateChange `protobuf:"bytes,1,rep,name=state_changes,json=stateChanges" json:"state_changes,omitempty"`
}

func (m *StateDeltaSet) Reset()                    { *m = StateDeltaSet{} }
func (m *StateDeltaSet) String() string            { return proto.CompactTextString(m) }
func (*StateDeltaSet) ProtoMessage()               {}
func (*StateDeltaSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *StateDeltaSet) GetStateChanges() []*StateChange {
	if m != nil {
		return m.StateChanges
	}
	return nil
}

// A StateDeltaEvent contains the information about the start and
// end of the delta (from a block perspective) and the list of
// changes that have occurred in that time. The list of state
// changes are limited to those in the namespaces specified at
// subscriber registration time.
type StateDeltaEvent struct {
	// The block id associated with the changes.
	BlockId string `protobuf:"bytes,1,opt,name=block_id,json=blockId" json:"block_id,omitempty"`
	// The block number associated with the changes
	BlockNum uint64 `protobuf:"varint,2,opt,name=block_num,json=blockNum" json:"block_num,omitempty"`
	// The state root hash which resulted from the changes.
	StateRootHash string `protobuf:"bytes,3,opt,name=state_root_hash,json=stateRootHash" json:"state_root_hash,omitempty"`
	// The previous block id
	PreviousBlockId string `protobuf:"bytes,4,opt,name=previous_block_id,json=previousBlockId" json:"previous_block_id,omitempty"`
	// The collection of StateChange objects
	StateChanges []*StateChange `protobuf:"bytes,5,rep,name=state_changes,json=stateChanges" json:"state_changes,omitempty"`
}

func (m *StateDeltaEvent) Reset()                    { *m = StateDeltaEvent{} }
func (m *StateDeltaEvent) String() string            { return proto.CompactTextString(m) }
func (*StateDeltaEvent) ProtoMessage()               {}
func (*StateDeltaEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *StateDeltaEvent) GetBlockId() string {
	if m != nil {
		return m.BlockId
	}
	return ""
}

func (m *StateDeltaEvent) GetBlockNum() uint64 {
	if m != nil {
		return m.BlockNum
	}
	return 0
}

func (m *StateDeltaEvent) GetStateRootHash() string {
	if m != nil {
		return m.StateRootHash
	}
	return ""
}

func (m *StateDeltaEvent) GetPreviousBlockId() string {
	if m != nil {
		return m.PreviousBlockId
	}
	return ""
}

func (m *StateDeltaEvent) GetStateChanges() []*StateChange {
	if m != nil {
		return m.StateChanges
	}
	return nil
}

// Registers a subscriber for StateDeltaEvent objects.  The
// identity of the subscriber will be based on the ZMQ connection
// id. This is an idempotent request.
type StateDeltaSubscribeRequest struct {
	// The block id (or ids, if trying to walk back a fork) the
	// subscriber last received deltas on.  It can be set to empty
	// if it has not yet received the genesis block.
	LastKnownBlockIds []string `protobuf:"bytes,1,rep,name=last_known_block_ids,json=lastKnownBlockIds" json:"last_known_block_ids,omitempty"`
	// The list of address prefixes of interest.  Only state changes
	// that occur on values in the given prefixes will be sent to the
	// subscriber.
	AddressPrefixes []string `protobuf:"bytes,2,rep,name=address_prefixes,json=addressPrefixes" json:"address_prefixes,omitempty"`
}

func (m *StateDeltaSubscribeRequest) Reset()                    { *m = StateDeltaSubscribeRequest{} }
func (m *StateDeltaSubscribeRequest) String() string            { return proto.CompactTextString(m) }
func (*StateDeltaSubscribeRequest) ProtoMessage()               {}
func (*StateDeltaSubscribeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *StateDeltaSubscribeRequest) GetLastKnownBlockIds() []string {
	if m != nil {
		return m.LastKnownBlockIds
	}
	return nil
}

func (m *StateDeltaSubscribeRequest) GetAddressPrefixes() []string {
	if m != nil {
		return m.AddressPrefixes
	}
	return nil
}

// The response to a StateDeltaSubscribeRequest
type StateDeltaSubscribeResponse struct {
	Status StateDeltaSubscribeResponse_Status `protobuf:"varint,1,opt,name=status,enum=StateDeltaSubscribeResponse_Status" json:"status,omitempty"`
}

func (m *StateDeltaSubscribeResponse) Reset()                    { *m = StateDeltaSubscribeResponse{} }
func (m *StateDeltaSubscribeResponse) String() string            { return proto.CompactTextString(m) }
func (*StateDeltaSubscribeResponse) ProtoMessage()               {}
func (*StateDeltaSubscribeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *StateDeltaSubscribeResponse) GetStatus() StateDeltaSubscribeResponse_Status {
	if m != nil {
		return m.Status
	}
	return StateDeltaSubscribeResponse_OK
}

// Unregisters a subscriber for StateDeltaEvent objects.  The
// identity of the subscriber will be based on the ZMQ connection
// id.  This is an idempotent request.
type StateDeltaUnsubscribeRequest struct {
}

func (m *StateDeltaUnsubscribeRequest) Reset()                    { *m = StateDeltaUnsubscribeRequest{} }
func (m *StateDeltaUnsubscribeRequest) String() string            { return proto.CompactTextString(m) }
func (*StateDeltaUnsubscribeRequest) ProtoMessage()               {}
func (*StateDeltaUnsubscribeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type StateDeltaUnsubscribeResponse struct {
	Status StateDeltaUnsubscribeResponse_Status `protobuf:"varint,1,opt,name=status,enum=StateDeltaUnsubscribeResponse_Status" json:"status,omitempty"`
}

func (m *StateDeltaUnsubscribeResponse) Reset()                    { *m = StateDeltaUnsubscribeResponse{} }
func (m *StateDeltaUnsubscribeResponse) String() string            { return proto.CompactTextString(m) }
func (*StateDeltaUnsubscribeResponse) ProtoMessage()               {}
func (*StateDeltaUnsubscribeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *StateDeltaUnsubscribeResponse) GetStatus() StateDeltaUnsubscribeResponse_Status {
	if m != nil {
		return m.Status
	}
	return StateDeltaUnsubscribeResponse_OK
}

// Request message for a set of StateDeltaEvent objects, based on a given list
// of block_ids and a known filter.  The result will include a set of
// StateDeltaEvent objects.
type StateDeltaGetEventsRequest struct {
	// The block ids to query
	BlockIds []string `protobuf:"bytes,1,rep,name=block_ids,json=blockIds" json:"block_ids,omitempty"`
	// The list of address prefixes of interest.  Only state changes
	// that occur on values in the given prefixes will be sent to the
	// subscriber.
	AddressPrefixes []string `protobuf:"bytes,2,rep,name=address_prefixes,json=addressPrefixes" json:"address_prefixes,omitempty"`
}

func (m *StateDeltaGetEventsRequest) Reset()                    { *m = StateDeltaGetEventsRequest{} }
func (m *StateDeltaGetEventsRequest) String() string            { return proto.CompactTextString(m) }
func (*StateDeltaGetEventsRequest) ProtoMessage()               {}
func (*StateDeltaGetEventsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *StateDeltaGetEventsRequest) GetBlockIds() []string {
	if m != nil {
		return m.BlockIds
	}
	return nil
}

func (m *StateDeltaGetEventsRequest) GetAddressPrefixes() []string {
	if m != nil {
		return m.AddressPrefixes
	}
	return nil
}

// Response message for a GetStateDeltasRequest.  Returns a list of
// StateDeltaEvent objects for the block_ids requested.  Only block_ids known
// to the validator will result in events.
type StateDeltaGetEventsResponse struct {
	Status StateDeltaGetEventsResponse_Status `protobuf:"varint,1,opt,name=status,enum=StateDeltaGetEventsResponse_Status" json:"status,omitempty"`
	// the events returned for the request.  This may contain only a subset of
	// events matching the given block ids, as unknown blocks are ignored.
	Events []*StateDeltaEvent `protobuf:"bytes,2,rep,name=events" json:"events,omitempty"`
}

func (m *StateDeltaGetEventsResponse) Reset()                    { *m = StateDeltaGetEventsResponse{} }
func (m *StateDeltaGetEventsResponse) String() string            { return proto.CompactTextString(m) }
func (*StateDeltaGetEventsResponse) ProtoMessage()               {}
func (*StateDeltaGetEventsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *StateDeltaGetEventsResponse) GetStatus() StateDeltaGetEventsResponse_Status {
	if m != nil {
		return m.Status
	}
	return StateDeltaGetEventsResponse_OK
}

func (m *StateDeltaGetEventsResponse) GetEvents() []*StateDeltaEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

func init() {
	proto.RegisterType((*StateChange)(nil), "StateChange")
	proto.RegisterType((*StateDeltaSet)(nil), "StateDeltaSet")
	proto.RegisterType((*StateDeltaEvent)(nil), "StateDeltaEvent")
	proto.RegisterType((*StateDeltaSubscribeRequest)(nil), "StateDeltaSubscribeRequest")
	proto.RegisterType((*StateDeltaSubscribeResponse)(nil), "StateDeltaSubscribeResponse")
	proto.RegisterType((*StateDeltaUnsubscribeRequest)(nil), "StateDeltaUnsubscribeRequest")
	proto.RegisterType((*StateDeltaUnsubscribeResponse)(nil), "StateDeltaUnsubscribeResponse")
	proto.RegisterType((*StateDeltaGetEventsRequest)(nil), "StateDeltaGetEventsRequest")
	proto.RegisterType((*StateDeltaGetEventsResponse)(nil), "StateDeltaGetEventsResponse")
	proto.RegisterEnum("StateChange_Type", StateChange_Type_name, StateChange_Type_value)
	proto.RegisterEnum("StateDeltaSubscribeResponse_Status", StateDeltaSubscribeResponse_Status_name, StateDeltaSubscribeResponse_Status_value)
	proto.RegisterEnum("StateDeltaUnsubscribeResponse_Status", StateDeltaUnsubscribeResponse_Status_name, StateDeltaUnsubscribeResponse_Status_value)
	proto.RegisterEnum("StateDeltaGetEventsResponse_Status", StateDeltaGetEventsResponse_Status_name, StateDeltaGetEventsResponse_Status_value)
}

func init() {
	proto.RegisterFile("sawtooth_sdk/protobuf/state_delta_pb2/state_delta.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 585 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x54, 0x5d, 0x73, 0xd2, 0x40,
	0x14, 0x35, 0x94, 0xa6, 0xe5, 0x96, 0x8f, 0xb0, 0x53, 0x67, 0xa8, 0x58, 0xc7, 0x89, 0xd6, 0xc1,
	0x3e, 0x84, 0x11, 0x1f, 0xfa, 0xe0, 0xf8, 0x50, 0x20, 0x2a, 0x03, 0x13, 0x98, 0x85, 0xea, 0x8c,
	0x2f, 0x3b, 0x09, 0xd9, 0x0a, 0x03, 0x4d, 0x90, 0xdd, 0xd0, 0xfa, 0xe8, 0x8c, 0xff, 0xc0, 0x5f,
	0xe5, 0x9b, 0x3f, 0xc9, 0x64, 0x93, 0x40, 0x4c, 0xb5, 0x32, 0x3e, 0xde, 0x7b, 0x4e, 0xf6, 0x9c,
	0xbb, 0x67, 0x73, 0xe1, 0x8c, 0x99, 0xd7, 0xdc, 0x75, 0xf9, 0x84, 0x30, 0x7b, 0x56, 0x5f, 0x2c,
	0x5d, 0xee, 0x5a, 0xde, 0x65, 0x9d, 0x71, 0x93, 0x53, 0x62, 0xd3, 0x39, 0x37, 0xc9, 0xc2, 0x6a,
	0x24, 0x6b, 0x4d, 0x90, 0xd4, 0xaf, 0x12, 0x1c, 0x0c, 0x83, 0x6e, 0x6b, 0x62, 0x3a, 0x9f, 0x28,
	0xaa, 0xc0, 0x9e, 0x69, 0xdb, 0x4b, 0xca, 0x58, 0x45, 0x7a, 0x2c, 0xd5, 0x72, 0x38, 0x2e, 0xd1,
	0x21, 0xec, 0xae, 0xcc, 0xb9, 0x47, 0x2b, 0x19, 0xbf, 0x9f, 0xc7, 0x61, 0x81, 0x4e, 0x20, 0xcb,
	0xbf, 0x2c, 0x68, 0x65, 0xc7, 0x6f, 0x16, 0x1b, 0x65, 0x2d, 0x71, 0x96, 0x36, 0xf2, 0x01, 0x2c,
	0x60, 0xb5, 0x0a, 0xd9, 0xa0, 0x42, 0x7b, 0xb0, 0x33, 0xd4, 0x47, 0xca, 0x3d, 0x04, 0x20, 0xb7,
	0xf5, 0x9e, 0x3e, 0xd2, 0x15, 0x49, 0x6d, 0x42, 0x41, 0x7c, 0xd6, 0x0e, 0x7c, 0x0d, 0x29, 0x47,
	0x2f, 0xa0, 0x10, 0x3a, 0x1d, 0x8b, 0x83, 0x02, 0x2b, 0x3b, 0xb5, 0x83, 0x46, 0x3e, 0x79, 0x3a,
	0xce, 0xb3, 0x4d, 0xc1, 0xd4, 0x9f, 0x12, 0x94, 0x36, 0x87, 0xe8, 0x2b, 0xea, 0x70, 0x74, 0x04,
	0xfb, 0xd6, 0xdc, 0x1d, 0xcf, 0xc8, 0xd4, 0x8e, 0x87, 0x11, 0x75, 0xc7, 0x46, 0x55, 0xc8, 0x85,
	0x90, 0xe3, 0x5d, 0x89, 0x81, 0xb2, 0x38, 0xe4, 0x1a, 0xde, 0x15, 0x7a, 0x06, 0xa5, 0x50, 0x7e,
	0xe9, 0xdf, 0x28, 0x99, 0x98, 0x6c, 0x22, 0xc6, 0xcb, 0xe1, 0xd0, 0x15, 0xf6, 0xbb, 0xef, 0xfc,
	0x26, 0x3a, 0x85, 0xf2, 0x62, 0x49, 0x57, 0x53, 0xd7, 0x63, 0x64, 0x2d, 0x94, 0x15, 0xcc, 0x52,
	0x0c, 0x34, 0x23, 0xc1, 0x5b, 0x23, 0xed, 0xfe, 0x73, 0xa4, 0x1b, 0x78, 0x90, 0xb8, 0x16, 0xcf,
	0x62, 0xe3, 0xe5, 0xd4, 0xa2, 0x98, 0x7e, 0xf6, 0x28, 0xe3, 0xa8, 0x0e, 0x87, 0x73, 0x93, 0x71,
	0x32, 0x73, 0xdc, 0x6b, 0x67, 0x2d, 0x1f, 0x5e, 0x55, 0x0e, 0x97, 0x03, 0xac, 0x1b, 0x40, 0x91,
	0x01, 0x86, 0x9e, 0x83, 0x12, 0x45, 0x49, 0x7c, 0x73, 0x97, 0xd3, 0x1b, 0xdf, 0x44, 0x46, 0x90,
	0x4b, 0x51, 0x7f, 0x10, 0xb5, 0xd5, 0xef, 0x12, 0x54, 0xff, 0x28, 0xcd, 0x16, 0xae, 0xc3, 0x28,
	0x7a, 0x05, 0x72, 0xe0, 0xd4, 0x0b, 0xdf, 0x48, 0xb1, 0xf1, 0x44, 0xbb, 0x83, 0x2d, 0x30, 0x8f,
	0xe1, 0xe8, 0x13, 0xf5, 0x0c, 0xe4, 0xb0, 0x83, 0x64, 0xc8, 0xf4, 0xbb, 0xfe, 0x5b, 0x40, 0x50,
	0xec, 0x18, 0x23, 0x1d, 0x1b, 0xe7, 0x3d, 0xa2, 0x63, 0xdc, 0xc7, 0x8a, 0x84, 0xca, 0x50, 0xb8,
	0x30, 0xba, 0x46, 0xff, 0x83, 0x41, 0x9a, 0xbd, 0x7e, 0xab, 0xab, 0x64, 0xd4, 0x47, 0xf0, 0x70,
	0x23, 0x73, 0xe1, 0xb0, 0xd4, 0x8d, 0xa8, 0xdf, 0x24, 0x38, 0xfe, 0x0b, 0x21, 0xf2, 0xfd, 0x3a,
	0xe5, 0xfb, 0x44, 0xbb, 0x93, 0x9f, 0x76, 0xfe, 0x74, 0x1b, 0xe7, 0xaa, 0x9d, 0x8c, 0xed, 0x2d,
	0xe5, 0xe2, 0x2d, 0xb2, 0x38, 0xb6, 0xf5, 0xc3, 0xdb, 0x64, 0xb5, 0x6f, 0xfd, 0x47, 0x44, 0x3f,
	0x7e, 0x8b, 0x28, 0x21, 0xb3, 0x45, 0x44, 0xb7, 0xd8, 0xa9, 0x41, 0x51, 0x0d, 0x64, 0x2a, 0x08,
	0x42, 0xfd, 0xa0, 0xa1, 0x68, 0xa9, 0x5f, 0x0b, 0x47, 0xb8, 0xda, 0xda, 0x2a, 0xcc, 0x63, 0x38,
	0x32, 0xfa, 0xe4, 0xfd, 0x79, 0xaf, 0xd3, 0x0e, 0xd3, 0x1c, 0x92, 0xe1, 0x40, 0x6f, 0x75, 0xde,
	0x74, 0xf4, 0xb6, 0x92, 0x69, 0x9e, 0xc2, 0xfd, 0x78, 0x7d, 0x69, 0xfe, 0xfa, 0xd2, 0xe2, 0xf5,
	0x35, 0x90, 0x3e, 0x96, 0x52, 0x1b, 0xcc, 0x92, 0x05, 0xf8, 0xf2, 0x57, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x6c, 0x2a, 0x19, 0xa1, 0xf1, 0x04, 0x00, 0x00,
}
